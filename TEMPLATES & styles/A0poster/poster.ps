%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
%%Title: poster.dvi
%%Pages: 1
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 2594 3402
%%DocumentFonts: CMCSC10 CMR17 CMMI12 CMEX10 CMSY10 CMBX12 CMTI12
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Ppdf poster.dvi
%DVIPSParameters: dpi=8000, compressed
%DVIPSSource:  TeX output 2002.11.14:1630
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro
%!
% PostScript prologue for pst-grad.tex.
% Version 97, 93/05/12
% For distribution, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.
%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).
%
% Syntax:
%   R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill

/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBlue ED
  /LastGreen ED
  /LastRed ED
  /FirstBlue ED
  /FirstGreen ED
  /FirstRed ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastRed FirstRed add 2 div
  LastGreen FirstGreen add 2 div
  LastBlue FirstBlue add 2 div
  setrgbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
    MidLine { GradientLoop } repeat
  } if
  MidLine NumLines lt
  {
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoop } repeat
  } if
} def
/GradientLoop {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Red Green Blue setrgbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Blue Blue BlueIncrement add def
  /Green Green GreenIncrement add def
  /Red Red RedIncrement add def
} def

end
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: ./a0header.ps
%%BeginFeature *PageSize ISOA0/ISO A0
2 dict dup /PageSize [2594 3370] put dup /ImagingBBox null put
setpagedevice
%%EndFeature

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 74 /J put
dup 97 /a put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 117 /u put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
/UniqueID 5000829 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EF696E091A9D51510BE264701A41C04FA8125A48F306ACA7A83E35D5BA0C296A
BC594ECA2CB27E92FED95B595C21E5BF0DA724D40761CB377BDE5FB98C9D152D
6C0DC98C4083E9656321BFC445CD6FCC142DEF16E27DD6FAD0B3185223B1A7D6
779F39C70793184F2C3B721FD0AE6D8E063BD47804785DAEA74AF8C75483B713
65061659892D8235E9ED5E137323708176DFC35E788B66843AF2CDB65E8DDA36
7910EFE42D8ECDCEC56F826E60FAA15EFD6CA67DA00F5682BC56C3E1642EEE85
7E83A7AEC6A6CC77577E3F0CE5BBA6C7B528459387A13DA55435485975DC7670
DE52279DBE9B522113914FCD40EF9383289A974E582EF01A88CB72437BB79D9F
7985FEE1F3D61BBBB643C3A39B5D16068B03C4A8A30D42F557E9CB071D03244C
41AF3BF0629F66B01C7F1D6BA319C1C76F59613BE91DC5DC5DED7E1865B71B06
8A3E4F266840E9CD669283BD03CE0A1F4E6D2CAD2E3F8C6600ECB60FE500FDC4
E94E56AE69C439835419583C1EF1BD1276D3BF9BB3D1C0F24A66BA4A9B140EAD
9D84E934991EA9D773DAE631CFA4A889D931527AFE92CE199F5D1798487B9F1E
073E51F4A2CBEFFA6964B9CF3279D261B1985925CEF7CB75ED83DDDB7D44BE8E
3B96AAD0B7335F3524AF94D237F644AFC0B47797DE180CC8F4B626599707FCFA
4A76892393C67FC1009675BBB0FBCED45470008F044B54F564FA910D7B0C315A
6C054BF62E899B4F3C86F3000FD1066791EAA456E4CAA0AA21268628CAF14C67
074C6E542ED269F6E398D0EC685429FADA3A9572A07C97A5A7CFBB1B4736F3BC
08B37F51AE04190DD9F6A2486A0CA2DF51DEB61E55A8CFFC25C47190295B997F
5E93FA16BD3F2039E81A5352ECCFA7CE8DF67917BEB681D89053B0542F25F68B
8F8100B909A452ED4B57836B9AE73CC50FFF1AB70A6FE81B53C6897DC20B1F69
090EB3E84A29F7CDAC05C75122B1D3486040BE38B127051434F722B97A9C9FA0
11E2042B34A1F0ED5DF56EB3BABFF117BDBFB0E14D5EAC6210EB8E11CFA3FA96
D58CEC6FC17B3D0D71812741377D223A67EF0CD97DF80F171F439CB11843C34C
F8AE2F7C14666F3419F70CAEFB6CF4E19CC5CA34DF112E80529DBB48A554E0C6
C7A6E417A1C7687E0FAD500F138ECA9F4B7260395D8162CE3174A261C54FAB1D
5AC2BA40BED7417462C2E99CECBD9A2FD6D448B7EA060E67A1D37E163C2D162D
E7D0C7BB7334371746ADF8C709BA1D5C212C15B860655C9E3B127D57FFCECFC6
C0D4128D6BAB9E750817DFF884FE7B5D2C3764136257704AF7F31FB760FE3C21
92C923886999D5B226E0E0C96D3F30B1EFD32BCBA302270681FBBA221A6565BC
6028BB657C0A3E251F126F3577BC832FCC73ED2DFBB4846A0AD61FCA4F4A9F71
7AF5C02B55ECA96B40477140FB2D2F58758F5490489594415BF460404B0D1FCF
09F4078EABB38A5AC8A2D05D854D7D65B183C953622870861D2D417AF5F95498
24307165CFBB1A533DDB1DE9F3D54409DF2BD4DCE29AB174F0E838219E24E6AA
CC4B96C70E88A1399080BD231BAE95D7E757A93FFF1E60DAAD9FE6FE0DDBC76C
57B233ACAB9702949DBC272E7178A98162E543D46359C278067FD08C9B0A6EFD
E27CC582D03F53D5AC3A57E2CCF7A65E0378C04F9E524D8D757A508268F9AD9F
F61AFC1DC9EB630836B24A585D7F5EDDE3C0DBCC23EF492A90FD49DA3FA02893
884712DF56FEB33EF60809838E66E33BE1B930E24B4BAC29BEFD15521099A1D4
109552D7194A4C51612F1380F14A7820E22729671AB7B1C90E5C640F1A6CB490
5C71E042A917C0A4F5E56E7CD41E49B175D57A0E108763864F7057C9279A5730
2D3B35D068730062104D0805FF22F9D9ACB9640569720303186D775F877F4317
53DFB2309684CDB5EB22D58A7F95B6D0A517C9D3121D3219E37570DE60799733
A0B6DF276D441A71B04BD32F26CCB72A4F356C6C5FFB575B9D71F6B6E7BB9705
70FDEA0304E17AC3F5CABC6DC3EA598321A5F0B17812B1AA80BEC720FB21E05B
53266D9A83C2F50A1E49B6481132DF666404AC5794251F7461BF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 110 /n put
dup 114 /r put
dup 115 /s put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueID 5000769 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
3E2BEC20D96C8D8F87D3795D89FB5CF20764520BFFB68DBEC2E6CF11766F3C36
158216CB5670AAAC6B6DA6703EEC34A7A6121912C503DACFF77EEC307C814781
1DDE8FBFC4C619015754D5A9A19F6C50825D7713B249F248DC97A1861F4E5331
48B227C483756CD96295D1ABE014D1FE73EF4FAC79473FD6AB6F0CA54EFEE555
0A4D46368EBFFE93D013746240401E8344D2CE1E0B351AF85B025C4C233A7164
97EC29F67D26F13FD1D838B581E01C17876215F42905EB9854230D8AA697FFF9
60C6CF4A2D30F5CC3D9C486405DE611B6D256905DFADA40D973BF64674B442A0
1FEB1A3D4919A07617A27743A09CB7D09D704091DDCAD3EC109234B92B216272
DEF791C4CE2AFF1FAE873B55EEA236B5D7863EBEDA745A01F1B923C099D45133
777ABFD6B7F8BC5AC1451D7C099D307AE7D722E2E51D1B37D35113BC3C4E5199
9A3CB6CDB9A5989F9CBEFD8525DD0CB408CE3B330EE56916962985562FCC86A3
43B75EF4246FC7A4CF31F045952B00ECCDEDD2CF09FB40AF4E4942CED6C94427
141538E4F123C3BA36F1C48014EA8E07DE5539999BA7BDCBD9F8FC03EA22E679
F8DE87347B72E49B656ABDF8B8803C27AF08A870B7275117B61406135A9C4D5F
BFED36E5624146C997664753AF1810FDFA26E48510FC4F87379E7D44705D5498
FE374F19349E440AA3C821EEB6533565368A67A019C6410A2E3EF1BC946066BA
0F2F9DFB6905E5A99B729BF724E2E99732AA95653A290B59F06E9309EBED4A45
7F14123650AEF3D7E1B4F588044549AE79DBC0BF48C90CB964A7AB8BB66B2EB6
30E5B583C60EBC2E0F44699AC4D195810EB7FCF5EFF2F6104BFE83F8FAD4127F
CFE58BA5CEDC9A7F2685DCF74A9FC6FA7B76BF49F403F1C1502349BC0A974850
2BA3C55CEBD65A2C6B02C09672FC5050C3313FD5D15E531445102FD4C10E3105
F811FF33B0D333F21DCA8150A8D0B34DE590F50C4EA1E8CE6A2838D1D0B6A38B
5F76FD8E0A434781FCBFCD51471400C79F0B74E70D21228099B7BB8972C58DCE
1263B097F81C72CE1B3A5BD51F0B47F690A1838CC209E8FE7ADF7D6B1401B66D
E7D164DB1EFA349D27B2B1C9258BDE9F85537F47386A4FAF05521A2873DD8B84
D5EB8796FECB0E0A9F3BCAEC07FB7F3A44016E7EBEE062A2E45166A46FDDA99F
EF68A94490B936C5226CCF0E42C4C92A733EDE5E0F121B82C6847D3F9A5BDD19
B5B5BCE273D9BEC21301437B065502483F7A6A47A2CE8413245207B7D31B29D8
F12D7571D1432E0B2F28CA32C004994D87ABCFA0B51E6A92AEC5DF6C09D904F7
2EB575C6971EEEC686B3444D3F6923CBA81EF0CEAA52FF275F879C9C57A154B7
974BC55868E2907529AF51F1396C2A54681FF1ED6E15368C53F545FADA8ADD4E
9CFFCAAAEE25EB1A75BE6AF066B9648E79DBFDC18AA79DCE516229BD1D10884D
A240AB5243CF69688E32A88B9F8EC31A9D5E301C6B4792B34F4C5358D61E7C18
F55A27B2C257FCE06539EB0A7C9BE5D35021D9433C5451EB4E7A17FE49E164A9
3CA58E8ABA129A48123CA1ECCB823055EB8BD0202469EF8DF55ADADF4993B193
1DA1DD9F02F652FD9D4615E33321E6112B02D11A4668C46FD22A69D6E9DEE079
5600DA6E6C1CC9F4FAC6C1C9CD3607A8883BBB5F5A139BDF6AB37F380204D4D0
F4F8709A64463779659A181EB81E2E64EA4C12949926404932C2EB8892A1B87A
D907C478EC8A0B4368BCA53B6D93B648C74D8B2EA46E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 177 /openbullet put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703711DA090312BA3FC00A08C453C609
C627A8B3A93CBEB09C55FCF1D97CBB387B17D21196D16D18281BBA371C22C7B2
7950869889CAF01E9E7555B7DA515A6E08F0BE8C5756149CB3868BB4D1152E3F
CB1095CBF4F89D32DF0B29E963C9F9CB6EAF6941BA591E6567617C4A9B78E9A4
C41F210ACEFB8E1243198332E7CF9637AA1F2C4DC98109B90945F20A5DD5B684
EAACA69A60AFD85C9615C20B181B428A8F0BABABB612E4086FAFF5F73CC9A56D
15C93D4452D51CE3803A1A9D99555CC75F461F3765FF798629C3E8E88ADC60C0
8D08F0EA82768F22138A14C96B9F83AB7B9D43B964ED476400D1A8080C990BA1
99
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.1: CMCSC10 1.0
%%CreationDate: 1991 Aug 18 17:46:49
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMCSC10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 177 /exclamdown put
dup 70 /F put
dup 80 /P put
dup 84 /T put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
/FontBBox{14 -250 1077 750}readonly def
/UniqueID 5000772 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A30EB76029337
900ECFB1390CA5C0C3A04528044F266BA17BE487C79B94FAC6D6484684C5BFEA
87BCCC77D40AD11552035E95E3007126418ED49B68468B38A14E88E68A267B98
076F1C9769A5AFBC285E5B158EAC9F926F1D6C0B8F1D57D9C31D25AE27123518
9D2CD92E5689E0213089BD268DA5E47525CB8EABAA4B78A15AEA34705889AB3A
FFB8953B5B3482E52BFA0940630ADF8C0AC2177D907324299EE980E850F203CD
B627962F43D5A678C44243CDE97853BDC6AB45FD5C09AD274DAF89929F583CC9
CCC24BDFC68B92111055ABA5F26D2DC67C70906F71C2957701D65AE746A60C30
40E6CB24B97FCDAD0487AE38A201FBF0E41BABD2181981A71940F1E707F91E5D
C8CA50CB16D8702D188E56D014D92F76CE0B52ABDB9110E32438D2BBF3E6A40B
7B005F10BB437812CAC6ED2996F7606DC962C4FDE207FF322782C343DF44CEC5
FF06A55C630C20E9AE1B0D1C5673753C43BA0767D65D1B451CC6380D8BB3C4DC
81E8FD8AA79BE993218686F29D3CD925566DD587F541A0DA1B1CC3BCEA2E6C7D
5E1016F6917A871F1BBAD96AF9E867735017119A381FCF33EB2D3E1E7093FD90
CDB0CED4818CFD9E201A03430CEC713620BE0D3254158931FB657C6AD4B2482A
0E7D070D7497892E9E942DF58E88CAF0C8221BF36BF7C435BF2C683A4A2EF4CB
E85820A8AD3486155A40143011BA9D76297F46DEF69ECA4596D6E4CAABF84091
22A96A4BC78A8DD072FEB759A68A44BE1164638B6D952147EE3C628F9A022060
1D1941E73310943FA782532ABB1116532AD67AEFE0758C051241E301C7E13A98
6447EB0180BF6799814BEA4DC0F727D0A40B7BC3B1269CDE174453D6A3C4479C
146001CF717DE25AC1BE5AEA5F2F1C17719251C429D3AED19EF8C80C8ED8B705
F3A87F485E5C5264E2AE4A2A3F4FFE6A0912C6A85D8F0FEA2E4D2A05B5AD97FC
D94C9DDDE621217C2A808C93D78689240F8B946BF422452BBBDC73C096C9856E
445AC2AA545ED8D9147803CC3FDC1044DB26DE692A5D1BEE0B798AA6FCCA8D24
0CE6ED3DF69F2CFF9073505C990E6A9774AC5936E53CC9D035F7A9EBDF434EBC
B69D1ADFB94F988B63B45F5F8BE3FBEF52388CA3A0DD1B2EBF4DA78442821B73
29A54F9CF5103E7BD3FFF7A5BD9EA344F798B9BAD51E3F9AB52B1F80935A95A4
78B8A364C4447CCB054B8C646D56299C6DECDE5F2C43CF7ACAC240F3AEEEED45
097B4FDAE479338C7463B295EA5A97903BF05D68A5BC99063430E67CAD2AD65E
E91C72195F7580E9B29F44E6BC186DBDF54B7B15AF8AB17DF762EE4FEA29F4CB
859BB8C149E4CDC082DA526772590001FB3D5D9A9C4400C60BAADBC3C32F623D
5B631F619B93008FA87DFD97CF7058152C9C6BAAEA543042699DB163E286394B
2E3694F30DBA964D2CFEC2891F9DDF428CFE1F813E0E414A2216D60221353A80
C14C28C04BE3E2AB5032627B09E029B29F4234E705AD728F39CB1F5F4B20DC37
A2DFFAC2AEB9507B7A0BA223D3F297C90A3218F5C38E8F353A3F896CEF45E3A5
5B431D18EB878A3CD586674B3E3F48E149220292E7075D7BADF3304BD6FA009A
5B0C7F79DEA483FEB8EED35CC2C22F99DBA7024A194FF02D847F4FEC3B617C50
9DDF49178AB7C65C0CC4184616FFC2B75AC3DE6BD23F4399EFED5502710E7F0C
BD119DE6942B37D55AB3C98951BE51FBDDF4756B5816AF321481084B515F3A39
B9716206B0C66C63E165A5B560378852DEC1B9A1B066F06F8ADF34F26E1C6E0A
E7C940654E3131A1892BE79DD033E143398A883B75D38A7C86D3075FDBBA9F92
F8D4541B256F8E45FE964D614592654255186155F9E56E042B4B64062F574657
D78ADC93B7657ECB558074098CF39649DCE8023897DF4F85A36CC8C713E10E72
C996A9ED85AD02190B9339436B3229F9902A58890CF3569610ABAF7C1FFE5D21
8122AF77FF0197C01EE50C9662DF7D8EB1849D01159BE107295C2F24BA602F8B
47A2DE9C92F2A3B2D271BD16F50AE51977DE0C5D31597EBA929F73D4BBD42DAB
BD3939CB9FD6AC2F684CE5116BFC00A9957EC6500F1B29CA015B2DEB2E1CFEAA
BE91BCFCE77BEF0ABB0B56C3B1766A44A78FAB13036D00023E6E85CD2AB081BA
F91E8D823BCAC832235259170D58E3286D10646033B8A2FB476E6E1A5FCE1DEC
71F0E04E8CD67E2E1D34EA18F049B6A2A491EBB3A47964E8F716F03A1EA35EF9
22201313AAE5EAE05B1B878F10820DCF3EB409A1CB48C40CFCCB6B7B80A34501
BBCA38E882568946272CBC47777293067A5A48BD1F187872C1A3B8CB57E319EB
6DE6ED6E933A67DAA6359BF193D627D9432DC67BF0E065DA997BE3E12281F8BB
2EE2560F3E4131B73010D2742D2702B00E142062AD59AB80B7589D6A07199797
3DDD6B0727C081EA5CA29E001BFCCDEBD2049AC7BDB94EB39D5879BC3FC51C4A
D44A94365C8D8748AC7C554A8CB9035E3944655AB81B38512B9B4C222A7B1EB1
7E3623AD4C8723BD42311B59FA14302234CEC80A5347F43E6C098DF9A778B7EC
B202636C8F0ABC0D9171615DF66485740A29E5031815CE6CAF3DE7B8A5C744D5
70B45FBA9CB0DCB5E247BA37DF2B90C930E7432758EA67D719AFA3CEC1F2FC2F
0D62E7328E5E3EE3E7519E9D2382A252E1612349A42597F7F601B719C6767B32
20D99723311F60D04B51A007B2ACC4DD943B970B1DF0DF6F15C364A108DE8958
7121403C624588E2403C5DB74FE4A6CCAF6EB01D59A9ABB64D936E18183E8EDB
19F00846D67BFE58F3120EABC30C1BF73D13289DD5A3FCB2919147D42F976FA3
6A6FEEF13B3561A220093F785EEEF866104C0FB2CB7D62C0EAD730E4235A89B1
B76C873D00C3361D8DC804AA33AFE76B5124E843DC56F3E6665EC6308D8FE373
40BF31BDB5F21D981A72CA066504C0DE574101CBA7E21174017158A4FBAC66D1
64324EF95205722F3839E1ECE143FE45808272D2CBC9DA6694C7EDB0006088F3
6F53C9B8B83D5B24EF7B444FB577D155F4E7CAFEA10AC13FAD47397E487EC813
8EF75DD95AA07AF79A182CB07E3B6225D51C7DD529817368A6F472834B807ED2
1555F5BB87976F0E7CF2BF30779C5752CC8C9A9E4F5C1AA49F4FE918245C869E
15B1550A4944138B4B3F697639D1EA4A8A389DB254C924FB0B599D483636C60D
DCDEC5D96F54F575B7393F69E8237991A8B9B5DE40690BCA08EA275E825A9901
4C32214AFA8F76FD2007B718AAFEABB89E41840D48029720BBCCF2328138913D
C80E52A44118AC2B4445901DC68A129425516E03C0681EEC143AF16E89B01534
C9725E2A4E2D8B158C03EBF3AA3A6DE4556D12BEC1645B2730C8BC23B04263CF
2C37CFD5211768BEB6C7C1B70DE90BB82A8D184460F982A2CBF5D9261E596B8E
42E31B6D31C51287419EBB5483DADF335114DE926D5F0B83B155EE8356222257
9D34E937D87BAD1CAE170A1D5E0C1349059D24BEB2E6F0644892846151DE6487
0AFE9E114D0CB5EDCDA825486A671AF8627B8FA2CE27DDA9BD03D180E23D06D8
53CEC95291829A4D8963DC107785B1DB973F1D7BEBFC52115CCDB0BA28F1B7DE
72B12AF3B3D50F349FD957DDC483227EC4E6775468E7C92D3EAFDF7C623E0256
1383EA308F3CDBBF6F173D4B5130A660785D386A3DA346E2B02EFF8FE1A5F61C
DDD5C5E8CC05DB5E9D9DA8CBF417C796E2BF61E73FA72B05885141C00924C14F
F7EBE8EC604D1F87AF4908200B314418923455DFA960E04852829BB9A07E3DD4
63EA71EAC8F3DDB9D877194A370A433BEB4DD8DBE91932B453893CB9050944F1
65FA602933081B2404098C339C6264E20C98384923CE92250FE7B31431A404B9
B8441116A3692BCBD412A03A42B7A11EDBB3852D90E32CDC5C1CE0257F63E5B5
6E5B25537B72A5D366B64D6BA67882A89FB4415215E8E37D02267083D1C238B6
5425BDD3E35389973051E6A1EB8104227C579D5F123B74887F8109CD51077438
851C66334AF3323A610C39FB7CAA5A03E57C1635FBDAD4C1B98FFCC784E6B370
0A5D7C522420C373835308689F927DC4594E4B8A6F741EC3E2D9E742AC2D6303
716E463A08075C2522950C062E07DDD946DF3EF4F8725307173550AF06C11379
9CD7078A5AA4CB83641D636F001896683DBA5CD4B6DA863C2C58256FDC2DDA91
286AEED9CF738F2A8802E53B62E29AA9DE5DF401A05C25377C34939BFAE74C97
79462F35CA55968BBFE50F281A8391297D6288E84F72C81E241B0DC90EA6CE9F
87F9F13C11BCA6ED06CF4D7EFF59DA40F29B83533D52D9D567C6FB77CD549718
38F4804F708B8FBECA539B30CE7B22DE383BAAFEE39EFFB5BCAE19C3BAA68415
757F5B995A668B6F24EDEEB5601F4F792B245A1F707B9CB253EB689FAE7F7532
5D6F9B6FBBB590B83B4ED14562D8C4CD0A9C6CE2D89616939F86492B99FA9A78
EA1969593556216990A2CB9A67228EC4F958DB6E447355FC0F61894EEEBD7894
601C4902BA0E6A8BA5611DB2852F9A21AF990C121C7604EBF9C64B0F88D9878F
612D3D2085A795236112617BC42ED71C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 177 /delta put
dup 78 /N put
dup 105 /i put
dup 120 /x put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueID 5087386 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0BD00ACDE6F57014D23479A3581A3357123162295E05EE27FFB5970941A35B
E8C2473AB47A517E7F4D92C7AB7F010C1E4C647E0FDC8A5126A210A21A9A2DCF
16ABB0B90E9C887DBE33662046A1DF2127B8355281641799994DEBD48FC73D61
6143FFB86CADC5548C3E694D40620979205AAA2BFE5EEF8F1D03DD7A3799CCE9
C49BBBF38583042A2D4B25C77BFAC5FD4CCB61CC8B279A83B37EECE68CE51197
5D6DE89ED11A2258BB34CDE1A6B86679411B5E93236B6E38251125385AF1647A
4E4169D825AAC0866A0AF08A289F9378231D5B159C63BEDBC8B663A937636B89
0F72473F24F37CDE6ED8050A9C99E9CEA17F453BC0C120073E96DD4AE86F0222
60FCFE119FD463EEB31FF49F512CEFB665519E7E1450E00BB9D0279C98E76D8C
6F0A941885A6D4F83425F4644334171966B702279E15456C72C9D5D0A44F2547
C832BA3D991C37B604E4DE22C24947C31261DFE88A93AE4E6C759EC26A048C8A
EAE9C9724A170FAC6BCF6A85AA31C1BB7D7002FA394244CDD63239F480705C1D
172991FC1A0531E9CA18F182EF865BE434330FD6B8572443E109AFC869D720DE
E0FD278EF3FE724AB849B4CD288D6981C46327C16278EBDA432267B7341E9AFD
5F6E12D0A47DAAB60FAF8B43F9409392E4D9197B434AFA1C9983FC2C330B4F75
B2FB0D5A087CE736B14E6BB73F4ACB4682E15DB5F53ABA109799C10F25FA2E54
560FDD013A5E2A8A19212E3D5877FBE2C0BF94EAB16A7F3D84379A6F54320D93
C193C63E932ABB318F92E3E2E5DF7200B5422BC5A947048B321C17B6E751F55E
CA0DB49EE6ABC269DC5D5C523687E0486B329E1DDB519BFE339DDC9ACB93E49A
097FA8294C763EC7EB0EEAC06964603F4976ABCD3B9EA85D11DCECB426172DF9
63F27EB7A527E839784C9A8A1D07885F3077B9A2E5DD82BA49B8C06A3E8AE15C
27851B00F8450417F7D2951A6DDAC2CC52AA97C101B3B6DAF7F55C72DB4121E1
F900D5734BA9662D6D1A957AD041C2F8287AECA9DF4842A037F29BF966A2D770
C712D271C3B6A20EB3A464D51DAD18055844A411C9260AE3D1B9B5C997DF1BFE
CE03FDB7FEFAE5BB1DACC6082A02FB762E38A3417E323B536D4958EA59898E15
826AD396C5197DCF87DF143BFF6933D0CE998217DAA4B60D3FDE9940410FCFF8
53EEA12C43F4EB149320944D2ADB89C7F0713C790D30587CD132FF5F5436F3C1
84D2C0F06C829316656B168369E6CD886127DB818E67EC112AECCA95918E3940
A3C13AA0AF3EE0DA3EED647B46503FFC988F7775B46DFD4794E2BC48CD372317
DD4861532B5D1B8875A2D0B4FBB71AAF1FBFA6F8E8E32B257B9E55A7BB8FFD91
149B347708328D5F1F2341D7992983D1F9278507F935F09C0FF137D9B2F37560
407B24D8AAB5A353B44A994452DD23FF9A5A07403342025548B341654DC7A4F7
E98DAAD58078C1284A94857B3E7B9B8A8B819A656C77E0C04C8B57FEFE0A2C07
5427F345E01F44A8814727C73A86E3360491A881CAFB77CE1A69ADB041FD0531
CF87153475778036ECEEEA593426F4BCB8914012126028CEE64A3537E335ACA7
E547E828FE24E40735B661DD429822CAC7EF233517E6AD2F96DD2405BF342EFB
54B86B7C5235E8F5DF665BC47D5E005C67695214AD6871F71BEF16B82CCBE5FD
5D3D66E74E6E9A6B69D355CE23961451813C8DCF04C591F3A8473448E6CCA8D1
C696B42049D0FD4014322DB6ACC16C38DDB799A10259EA917AD7EFEC8819F2F8
340725E9B8101D8D99D32B6FABD79D44BD97BE54B84042CE8FF70685AB3BA12E
A5EB7EFA9D2900969183AC4CAFB1A28FF3F2B3DC23C71B3D7094954732C973D7
3D667376D19D837D0E436BF12C672AD8C84D6DC67DDCFE5CD2E103327C28B352
D03003C301AD9EE0077B1D0958E4852E1B8B8E7FA2889BC1E8B02E9B36DF814A
DE5DACB0833558BD32DB45C28C22A1319E245E95702BC523E906D1834E193B98
F37534A1A9823EBA795632CEB5A7A13E958104F9562B3B0A04073265029C5004
9A6293D941A81A1F8ACAADA1180EC7D5664B860D6D7512F1ECD6BE600F88899D
6B2F130B0B3498F163D04A6E141EE99E995D622876F5C9F3D232AD000137F6A0
0712697B919194CA24E269CE2B36B5ED5D20D4FA677DDED25F0069C103611BF1
56787A44C30343BB4DEEB8BCB611360F1302525B908817C56B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 175 /fi put
dup 177 /ffi put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 54 /six put
dup 58 /colon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 73 /I put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 89 /Y put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 123 /endash put
readonly def
/FontBBox{-33 -250 945 749}readonly def
/UniqueID 5000795 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F6F3F23E0C1657CF5D
E8374835BDBD2DED3690C84A1EBB8E2383A5E49E610B6F5F0F5F5EC43CFD16FF
24FEEFB92425CCB577E17FDE4EA6C50E1448DC5726A21888E25B6D6B52DA3D3C
E4C4C6A73C176DFEB60B6B6191B336AC4F5BAA123E1B3B6FAE4B3FA9DC8F7E39
335277EF2294315BE95F64EBDB1F393B293FD0FDB9DEE6C89082232013130D28
9234FF12DF47D454558A1EE8603B2832772E5CA07D18B34A4763D5B890F7173F
B8FA94D0E471947674BDD0F08DD9B6D240B65B36F989A6EAA127A4E19A8C22D5
0FE96AAAE4C7D6E6509FE8EFBA98525B66153126F240CA89CDA265FA5E87BCCA
6F406A677CC5EB23032165032E9C5446AB19FC490DFDC4203EA6864E17F39D1A
26061658CDBF1AB838E536C2D996999A4ABFD71E2F40C87AA0B2E7BD8DE76945
46124F0AC6DDBD20EA3F65FCAD82029E678AD62FA0AB81BE5133EF69AC4972C4
1E4F1CCB23FE44263486869AE8A881F325A07814F85376D609D7519F5941D992
60C3EE6BEA6BFF0BA663E14B641FF1159E5D89990004AC8795D1F9C0508059AC
A7A6E4F9E5FA45FF68EC75C0F0867BD74617169F3A168B901FF5AF8E57A07CFA
8E25936F5B36595DE7D42085A323D5C8C45F177E251E6F88E4EAD71CAEF2361F
A0CFDE21998058F510F5E59FEA1E4570D0E7BD013AFD5597C2B98441416A84D5
14F2798AA94CD9E84A9C471B64E4288F3CB6154A629F02E096B699BB73FB8244
E71C0B6E22859616D8FA330BD6C25BFAE1D06B53E86B61E2250974AB0C89BC2E
8CA80AD503BCA223417D626FA760498E5E25AD0D52ADEF2A051E410C8DC3A07D
D42468808F08847D5466114E603406C2A4287D271C39BBE54422B59CE8A3E585
1E01E4031317B704F766134CAEC4CABBB4B980DA7FBD8CE8D8478AAC09F91B5B
535D31DDD5748D88BBD785BAE5D259D3B9DA92D7638DDE1D255717E07381095E
B69D6F59E292283410C271B3D29A8C83E89E8816E19E1A137718B6FB8BA4C525
54C0CB084D12725F7EF01CA9680E429A54149D7F9B793EA40C4DDD00B8244733
B952E922585BD7EA52423B5342E9BC2F6909BBF9B42003C581BD37D51F65D9CC
D1BB1F2A62A4B67E05E3AB8D888C3AAD2468716DD70C5501AB105ABFD4B50F8D
D0F5C3859BDB7899C5DDBC247A1880F4E78E0077D9C582B1432A77EC371B6936
B321192774538ED1B3F537CDB018853AC02202713EED5DC37F139A3BDC187B7C
FE17F2E634CD2D00F3A3404608DC932EC2858F4504158E32BEE04E729F5BF690
8FB214BA6B5AF0EB5116553E6640EEA8ACB3137135C0DCC50A01A516E6D64DF1
66AF76863D66320D0AFE349EA557C9CF4BEB6A9BED966AFC378869FDB6D4E1D5
2F4B131D9B7892D629FA95F93F573991CFAC7122C1A8F56C599759E5611721F1
3B0F7D5A5D26DF561719EA20C355CCFAAD6511C61C16E33D1EA7FB268F33D092
45CF19BF64C6B0DEBDC0B6933DCC89EB00C8B1D0BE3058A024BE5A5950F6C764
1FB875A9C93E3E820C58909D4C36F7555BAD49DE3269061AC1FE527EF026ADA1
9936554788570E40D010B7F3606BAB06160DD83AE09A67D94383E1EF7C956F2E
DFAF156974777DAC5432D8FADEAA45A2799877BE9E5B453CD153B0E5DC514D6A
9FCEBF2C6C255C2BAC83730AEDAC6A4B441CF6CBAE1067C2123236F33C3A9F9B
DBFAA8681A703D8254160DDE3561C19573AF6220020034FA2D3A1FE2A0A2EBDB
37F308BBCCE5CC93CEAAEE182235E444E9927311C8ED2C557392B4A1E2C00DD6
86FA6B02B535FCF834DDC580253DC1282F02D6B8FE522DFFD60D27EC60DD86B7
C261826E6000924F7A54EB0795003CDEF3CD02FC7DC2C0FBBE5FC025C6BB2DB3
21C3B486D8421156BE3A8D4D620C0EF0468707F25C43C79456AE49C0A73798B5
FE8DB96157B725A125461EC810DDEE07E2881EC15412AD6FF7E925436CFA712D
3F4BA6ED0E4B2AF392EBB6DEF89561C175A6A1BFA435A4486C11AC97837E15CB
AB84866310E7102A79163360DF78F851652C2918BC073D2079DC882F6288ED0A
C64A8CA1E05DF9CC941094166739B303D828A527D405E2881312AABF31384304
3E739E24198D7CBEDC9E59A29F2D1C47FE2309BA0E96728748620E635DB9802F
DE6CC5BCC5750960DA27DF8321C31788D1FE9A265A8FAE8875F34291FE38B977
E910FC9667C709C7E37C0FECF8881B522C8091EAE65A879A4F301E063A4C5684
71B8A6A379F8614F649E4D03E971E1D448E5440E5A86DBAAE1CE5D20A817D3D0
D78FC9AEC41E414DF146429847B2208211356B33BD22843DA2C990523B73900A
FE1889B25A414140515DD040889737C8FBB06456D3D152B3F5A8BDC45DCCE89C
085E47325D42D1A6A74C8BC3FC9ECB225590C262429F62BB61C077E6AB6B0235
E2452C2CB41CAD0201AA8767F40E103D8F0ED02070BC589344C7242C8B0365AB
CC2F1635F7692C76AF130DFB07F5E476021307FB95FBDAB97C4AD8804C2F9495
F5A37CC2888D6A6D1FA019F3DD6A40A99629A8403D06345B78130D2B1531BA58
D9949AD07EB57934F10283FF5D159548096FAE3D27161D8B6F2F0C2632763084
AD02EBCF5DB8BE9E6DA3546AE30E32FC8C855EDB476D51E1866CE3140E40E420
82C7D62F5E93E84B3909A3DE9CC51E42DC00FD5F0C2610A4BD752464D37192DC
E56B22BA8D1300E188037AB3E9D064954E156024A3EAEAC7997D70A134DAC29C
37BC983FA003E7B903DE7A2BA29542B44B1241BFCC0B949FD3A837F0658A4324
2B0192575B437F358A08C3568AEA814F1DD27E7A737DB5827497DE9507850DB7
2456ABC4C8F43BEC131FC5B2C32CFEE617C89E5190DCEE3653BE8072FA7E8089
AFFFE24ACAD0E7CD4DB7EFF948457517551316170FC18DC6915B9F5D30B37598
25CC3CC3DD6A33BE652D3E1CFE23D43F7F03D868678DA1E5734AC8EB97743B0A
79A6DF4D40CB4047F1025E49C0A95CAE5E104933E38DC4BC7E38B0914DC7F266
BDE5CB496F51913C8CB6490C8D0CD16EDFB88E077EA1EA9419CDE0D7F0515123
935D81038703D868710ED71BF44243E3DE8834A2141950610A77A11956B65835
052302BD2E7527963187170512B24678033AF0C55AF60DDE070A0462BE68B568
1790E135B34FC513075F5DFF2348609E3D676375FE9BAD741CD6D35A4664D911
D37531B75E456125110701228FB87E889BAD02AE8A297BC366C3229364B32893
E368EF7EA0D383A6BEDF9A531B6A382FDCF264D2CCC72372BE76FF04F2D4D6F3
6B4538B5F7A3DB7BC0F91F3D67FBFBE192D508DB124EB112B9742261305716A3
E59BD830B584B230DF859575DC011ACBBE290F9ECB5977A48B9B5DA5300D3B0E
AECF208DC14D94BCD3A6F1E7BF22CDCE6BF0A4C3E61D94F0FAD1A09EAAED29BD
075277AFDB89710D1B66602228FABFC8332B771FD4820495A55D061686BBEDDF
C9CCEA6289FB0F283691FD0E3897B994AACE3938784CFCC3D031DF012BB6D7EC
3FEE73239124EA9558FDAADE418A0C804493DE29B66256130B1BCA2C5796F946
E8806330F7020C2688685234CF773AF511852566540528CF493718579A32ECFC
249878F3546DF03C4416E3036BC2B9076ED0002D0E4390B2721CF3E75C368572
6DC0EC8603544CEAF85D4286416043CFC002B3FBFCFFAE64D91DE498125CD341
4E32DCFB26871C8CE8D81EC6FB10865910A9F1D16E7415559F8FFFC864CC2060
55D341B15780BBD51C394B4B94953CF320364D20AEDD4AEE80724C278B746FDD
BCD9EF896A20AD8B8C7755FD00B4905B62F6B2E04832A3F75C6B9914E82BA115
77879864CE1E540C720E71EFB1BCFCEF4953BEFDD0C2DDB72DF8AF2843C0B277
9F44709F73F9263E6CCA402C90BD7CC6974F04B789DF2FED784D2D8B17772026
B5726D2E34DD10792AE1240E8E19B0B315D0368CD187FDF06F187DE070AC1FAC
8717C050512E94FBB31F13985BE10629D115EAE7324B589187A55BE6C2BFFE8E
D45B37AEA2E1D2BF4489061CF4E638C79503CA4DA095671A4C7D676A156AC397
F5B8944ACD1CEAF388D1E3100807E5E8D904D61150F1B7EED905D675C6E947C5
5C38A788129325D1BC8B698DD16D31B27E272BEDBB26F0842489172911D1740A
64BF3BA19FEDD59ED863A1BDAF24396BD01A98E705E6D04B3B32D498F1A3505F
63727EF52D23B33F2BE2489462E24398368EBECBA30072E02FA3E1EFF7946E82
6D843A4AFA872978269B6EFBB81C7907CC758146B3BFF97287BC80BC5EBE79BC
81FE68AEA06221157FF0AC3B620E0F9DB53F8EA124678F21482592C6C2071890
C8D25694E8D04E2E1975F9FE20EEE2D4BD6FE3DE171D055A4B079AAAB3D1BA7D
9185A7F3BB0FF31D5D49AC88D378FF724D3A72C3B42CC04F0C77E824A7984F80
64D49F664B5F0163C96C4E2B0D176F871CAF97862BC6AA655669DCD4DD1EF1EC
A6ABB23AF0F4E9196692793646B2D840FDC54CFF97DA0D97BE2CEC2AA0FFEFCD
F3A730A808CDCA85BB6A81965787592BE4BFA391BA2B4BEB276F21A6A69710E5
2FDF143D44404D61CEEDE8388D5729C43766EA5F09658D3BCDC29E43D29B7C3F
B7CD9C056C163CB209870C0EBEAD04D06131038774E95382829B3CBA2B4CD7E6
6AF42450DE2C6AE624179FE8E7BF3840C3C9B2CCE14FF2113BB44FF082D155FE
8C6AA263F05DB4EC8282F86D586AA8F59A3766C4C5B136816F85D42DA736C1F7
8B79AEF1F1D76903EFDCAE9BE62AB52E83834421456CAEC8E9664109D78CEDDB
C0A70CCCB14E5615A75B6959595A0D3D702B1350DAA287E981D90E23B2862BC0
C514C80E4CA7A85120F27249320CB26E4EB6AD3F03824038F197E852F8D9DF1B
60D78A02FDC353F178672FAB24A12178D468FD0334D3518523659493ADAA597E
97601633C2FEB40B7603A0128224A45E9EBD67FD0396E49D1A1849253099E217
F6939E4B7ACCF86DAD3BD6742CBC1062F58D7FA796B38C0CE554089136198999
94886100FF52CBE63202DA033F94E1201B7EF97FE6E1FB62D83BC2CEE8A5F796
77517B724EE8C03708F28F0B599C41686A20B7848A717043964EE6163A4AF7D7
2B5D4CAA6B113C33B3AEB579D2D5D809953A2E1851FF2C8E7F478906E46E54B1
870708C9EB05BD032E00960E479B2D19C21E85DE84212932F5A28992AF499AFD
460375EF2D2EFE0DD0810B7EA39068B2BCC62A4034EA258ADDD91C687232D347
CA66667DB95D13E9DBADFAA3FAE29AB612D85BE7B17B975FD3398DBE4DEB2B8C
430358BA76B8AFA89E50A55BD127ECA5D8E21192F15755AB2D7D2A3C3149E8AA
5951418DD8F15EE34F74C7646015ACB170FC63CD17E2BEBD88E023FA0A300055
77149D33A0AA76595474CE25BAA9F155343F130B79299C5394521522F6501FC1
84877D77BFD53384B55511D1CF5CC4A41C82F3D4683202A2BD0BAAF203B67AC9
613EA976F867F6CA1634A44CB6319620A52756137A35BAFCBF4E0CADF3602AF4
1B801E73C778F77A1F38353ACD35223A29D97FC1190B483658D5AAB7A735D13D
69B51BBD17A3A5FDE3F5B2F65E54A4CA5DC4F6B1A3FC8147EDCC9346B325445B
5AF179898AB99138D962755FDC9C3BCD1D27A61144DFC1069A5146A85A86EF6E
8DD440F54808F30132A9657697E050C37E9B8DAEA49E06E4BEB3136C9BC16ACB
9580BD2FEE5CB159188729638650EC97AE530D289052C72EE24172B4FA12921F
93019135E24F6DAD1557E967BBDA57B42732CEE9C1205DFB3ADEA562806AFEFA
BD36B2027CEAA36A1363B88DEA0B5F128401DD4E79F6F543673F534A9AA0A315
67E6B70C74A868E82B41E9028258E6EDAC7BF3C2270023B725FE71003C2D3C8D
F3AE1E86BD6F57E52EC29FD77090E95B9CD605D3D9A0198766D9A12FEB6B8F74
1D29A5D336B1E8EF4CC77A570A5DC593FBF2BE6FA681E9F626992D2125D71825
6314F103E05FFE8F72BA893D9BE3ECEFA1065F2A511789305B0576B909359CA5
7162F7FC1F5EC665FB7AF0CD1D2D7E23DDE3AE843C66299FD6E3A049E084081E
70F7C3500FB1AC4711074EF6B979936BD1770308A55BF8D6EA9D6288CDE29A0A
B64DAE821DA1C6BAD051596547BD1A4FF6F57F1B1952BC7B6A31F374752C24EE
8058D4A510801C27EF41F9BD4A46953A8BF42B507D5EB249CC4A9C80029DBD1B
C533D69D73F4A5607408D924F901447F5271C8D6A61008FA876C05647B3E7032
135B852BF379FB2AC3E9B297BE34A10836E311AA123BAED9F146DF7D8222092F
635739223CB05532AF961DF020A2D51FF6E1598834ED99F38B9093C19F6BBB8E
197C748D88EB15F551501C084C479D4ADE1AA8D34A4F4258DE51C2E22000BC23
BDE21AD457A03C12CC218CAF45117C14B81EBC18DA08C3BE5678DDB893015A24
2F7934D4EEA9B2D1AF0FD0F993E74425BF5980F4AAB7CD029CEAC2AF5777C649
D537FAB01FD085C5126DEEC7E895115E44AA1E9C169C1D58937E04DED2D5D868
65D38330C67DFDA2AB2E357D302E154F16E760AEEDF515C0D71758987DD0EC78
F4582E1DFC65ED76E060CE728977CD1BDAD1CE91D135B7BE0A49D09522752EC7
ADAAC729CB39BC7A6D3D4A360286F455B079100D53E3CB09C6C590F0DC81E18B
56332A11B7445818B6A931426DA7A257E6178D876771FF2B0B6A50CBD456032F
7644A3956B73EA3871DEB3ADA3616E0FB867541B1A7ADDE5F024C0CE4F50FAC5
2ED9BF46E51CDA3ADB70A106D087E4C78873B4E03736535F2E7DDB44E87A6F90
16AC8ADFE77F1675C03D129DE31BFBB6839EE604D8F0A3E06064B3ECE5CF6C6C
1C883CD2C17E2904D68DA11917E14AFFE4FE9BA77D4F2D519E6C19FBA3CD1672
0BF27D4CD1052A0C4B816A2C5E0F10357504A0683B7B32D4F5AC0538C4790B7B
F519632648030B2AD3AF30224D9E00C8D2C0DCA7415F70958971455068E31AEF
BCF13A4F0BAA6BC4829B870EB4131922450979957F6B88FF22C53858FBDEBB24
F60200A6CC5310AE8526003902EFED9A7BA19AD384B3B78878B2218899441BDB
692E7F0AD43D297DC5AE27FA336284C1BE5D89C42711D43936521D21A40E3914
651F2F9656A5E65CE0EAD377509C5FF41DFAFAEBE93C932A5A40A8D228B98F7D
4E1BD1F9F3C56A05BACD5D8DB555AB232B2883D329F0A937FD019B87A3A249D4
01712C0DD8FFD5C6873E04F59100573723564DB824781E24BC6EF8CA936A4B81
39BE77DE6FCD453D3DA8F5B2C23874AF1B801AE3F97DE7F0D3215948A77B9D8E
082921E5E3FC772481CC3215DE708AB4418BD759E9391388040CFA884970AEDC
292A3FE9F40799C20DD539B172C0BC11B436EA4CC66477B62DA8721EDB4BA51E
1FD79A1D759040CCC067926795EB83B3E6DEC235993A2AF0076329FF041E80C2
033EE5B76BC36D366C0980BA462F64F593280E174C9B50DF19625619647EC882
A36BD94FA7D6E2E087F0C62DE24A319EADCF7EC87170106688550279A07835FB
2383EA55BE277C7A3CF43B9A1A7F624A67A4B06327BD4133BDA8275BD90327F0
1851AAB65E15A272D95FD0470FCAD7F222D7D609019566B618F941B97A3EB95F
8228326009CA7C332F50CB3B1EFE969C234AB9FAC29208533400EBE5CB654557
8D46772BE452FA6F98D6A7AD2C4DF7E53FF3FEB118D6FFE3F3F8F67B91A7A616
9D3B2CE546D35509FD942AE5414516CE952A632E445F969C7EEA33B8D05244C6
5ADAB9984029992B413C143A4A9974FA9A47D3394FA6CC577594E749E1415AD2
9B668E2D9EAD9A17E7D447C9F4E0284C3DECD4ADA8B90C989E3E082041457503
54774E4C0C6F2536BCACD32C9F650A0F6D305E8A94219527CAF3A6571CC62953
E90D2B57C0251A9CAD37893A6A1FDC6A6D2283D7175069A8169FA68D4F1BD24D
BA121C9889D7CE118ACA514F6AEC9847B9BCCBFB8313AC41DB2CDD37F055217F
37C4E37CA4C75CAA90CC2905A84CE196DA74C03540DB2576AC0443A4435B70BA
11F6F69DBFD7BD7EBACF47631AF5060B8964BA2B164917B4B5B59706D6DB38CB
EAA56B0F401589C20DA528044786807A4C538A0F383F2592E263754A9B2D0119
1A3B6DFBC41E01A504BBD12EBF6D116486EC27A7F251469BF9ED03030F806708
5DB4DA2C05C58367FA1E47F4C9E12EC197EFCE4F1666A52B217038A5BBFB79B9
49AB3129E3F35907332EEACFC23966C8B844220BDD89DAC767A0FD0CE7EDBAD4
CD2E800B2AF85BAD296DB4843A7925874A111B47840BCF0B620795FF0D483D49
7BBFA1FC4016E8ED031C52A5D96A49CE9089B55A3E073214F7B7AF559B91E472
F23FD889D32429A03D61F24578B19E51F7870E9983DE80A58B54FB312A9327F6
C2A3193EED6C1CE235E50DC5E00037EDE2DD00AE87A09CAFAEAD8D9FFBAD2543
67178AFDF358C95B5110B501C7CA5FB92DA653B340B21AAE8618EE2C50C1C5BC
1CBAF262179AF39D03C9AE746E3235E562ED414B14F2182A389393B4A351FD6A
4A90C37B2E1BE65A26FE74356C95CEACD2F098FC3463D4481783CAB485C6E799
BD35C55BED7964F3ABAE796F14DFC654ACC937AFFF5492E749E6C04825D59679
54DB3C0E1D7CE0FBEDDA48EDB1BEC53D45CA1A8127D48D72559016152F787E81
5AABC0F6221A1FE52CA8B22E2DABFDAD036BC322B92AE77267ACAF549504A02B
35BFD74A307335A2A31F9D1B827CF4182307FB5D33C71407B73B9BDA0E11964F
210793DBD6404BD636D30335F42428DCC6F38BA4BFE41335E475C193C4FECBF5
0FEF5D83DD8049DBCDB450FCCEDEBE4E1660848E843090FF9A8ED224081DFF4C
BB0912CE7B40638830384A6DC0476789466420F72BE6E45DF113A857A58AA600
0E4E2CD8D6E719CF6B5E4CF0B8FBC02C48456F5C96C68781F328EC0C94DAA021
73397B62855A81343775064A76C53B425A7E819F131077BA24F4F91C08D896F6
0F1974D0894AC02BF50B0026E2B091C544DF75B961683944E15BFAEC9CE9F260
3E293D6804C9D8A1E95246C8C23EB39B762E0FB5AE84927EB967B3C3109E32C3
9AA2F8AAB0E136090B53AB30D97FDF3AB3578C1795593E418F21BFE277E46908
2FC7C62D15ABB40A6C717CA05CD629497D574C2EA40D08846F96B13FAEFE02CA
5410DBC6A6553C88AF0D269C816C825B5BFD9CFE8B3735DAE36F776EC9808A64
0069F65F41299086448554D06C5FA15A974A307237D6E7C7D4D8C123513339C3
6BD994AFB95301B6CA8210FAD28F2A31ADA02ED833C430E4E3B906975F706819
5A21854C5365A4F6C772DEA7E25A7A932C4C6C4616BDE1BBEC0AA505C7C1CB71
74ABE49884C129F5491C30608F27CD4202E40D2ABFCB216A9A17B94CBEBF7A0E
4F257E28BEC6441D65B9DE667A4E4319FEF805BEC14ABCB5DB6E68B4944810ED
55704DF03B0C471258C4BD50A0FCF36D7696004DE49EAD425031CA36EC4ADE83
15BB5A6FFA285FE9AE65F96CBD8DC28E3AE23330365716DB6927B0AC33BC0610
AEA9336354C4DD9F4B3122A0AD0100A19D3B3D59D340C4FDD07B69144CDF3CF3
03784FF3BC61523C09E4C47FF60C546E9E64F0356C2354EB4A1E1B590EFA388A
85A5FB1BC80DA97D7526BEE5302A0D3C25AB27EAA698F3B298FEB1043914897B
2600726BDF2095C3D15F08028211BEF50BD8E93B1B743C79C145E322CFD2D2B0
C049768AF982C14FC55CE0360E7C604B506FF428105BDCDC7D0EC6350E7D2593
13BF54CA377B1FB574102655444E47CF3DFC6B042B27FDC9D0DEDC16B76782D6
0D644580609672B1151D4D3A88037CE58940F221D412653A80E494A3ECF7287B
A8302E36EC62A8E8896E6547A6B160CBA022925BD0F5B79AAC1AA6B4CFE48308
6CB6EFE7F734D3134DE8FE0620C9EB3E75C83256E2B1359A55465AE0F0334925
8A580F8748A56F59F1B70851106C8C2FCDAA40C26428409001C676AFB4A15D5E
09DBFD68166C47B48F0C28196B6C9061A615F83C28CC299DA7A50C6CF2CD0976
3287EEFAC0270513D6A957CC1052D202CE03DE6DE211789B15DECC0CD1813D21
DC70FE5B26EDED11AA696FB33169911E105A05A9C4420DDDC5DA804070168142
814CA1A7E8825E4F72D5DFFF7A521D7FD72E4084EA6DAB94274B0A38A65BC82F
8E699E2ADAD955DFAB6A1D9B04B5CF804623181DBEA69108878ADD95838747A7
994667AA93D2B2CFC9BB462D7A9582543A818369762205699890D76B1603F999
F9F04092CD4FDA91F67393EFF40B2519FC904CA199416919A8C68160C50DDC6A
0DC3CC106ED095D132EF69D1F9D0B2FD2A5F439C376DCD0B4DEE3FDA97986A06
FE347B47962F38575D36FAE4E533AFF6FF66D51ECD050F6CF252DFF83B2882C2
57408982BF1167DAE21ECC53B79E986E52D3902136B05A8D8F068CCD0DDC5BA0
E7F1FFA28CC8F0EB127C64AB9A0D7D094374E44CA802EAD182ED168E48B39DE8
5205FA770391BD0FDEB4AB6CD1DEBE2524FD52E4D05E9929E8AFA7E78E6B46FE
28F10D9F43F2E3EE3C42774D49A3C2C26A605DA031AFBEB49DB181B88E28DB94
3D62ECA12DF36DFC0E04668D9E8551FF33AD25435D1BE7D9D70DDACFE2809696
6B49041E9DED3C0926DAC029D40FA203915BCFE66BAE9ECEBE19702FCF7C7175
59F2EA4AF28CB347377434460EFEAD076DD61564DDD0516E382DABF7231B02B9
3B86D0806D378DB1B241A442D727CD1B747FD462FB40E77184964164F36550A3
1356180434FB36BBA01CB82CD9B92E479CEAC7736738DCF1609479EC4FD4DF78
7579DB952B1EA2175E40DA01E8BD6CC744DD9E0CFBEF84311510A43EDAF044E0
9F62D613C630327FE1C37472C9EB9E9EB349A85DC8522834731030C9BD04989D
D0C2F38F99D6CA2F6264F690E07C41C49F912C676267DE394D5C545DD0522FFA
2C9833D65E1DAFB28DEC401003E3D3D04782EC1F9D9CB11DFD4F4492190AE9DC
8EF7B17044D2D7D678BB3EF1EC7C55AE3D2F984D737AFA2B3CA6114D18478489
3DC01FE623E944AC4507B1F8EFB5F21A6E6C73E3BAE766DDD542AFF71F67965D
D269CF3922B8ACBC0942CE2602C53FEF686C4CEAE6BB81543404122AF6C16C2E
CC5CB27BFAB889B4601BACC92351EE4A980D7B2B3EAC4A9DA59A4F17E5869588
3B4ACD4F244DE4D922D7B88E195A095BFCF717F70FDB3B0EF1106107797EBC6C
64E86D40EEBEDA2A1CBEFB335AA12D4AD43DBFB8D8D03599E871AF92DE0C7A40
12689866DBA437317513C934C8D2EB36B21963630C354D5BE28EFE28AA448099
83254277BD454362F6E4DB7101C3201AC0C5A55B6C09F89068FDA74155EEF683
4B824C6C7D781175DDFDB6796278E8BED5369AF89867DD5F108778D84ADA215C
AE36413CCFD612B926CA4AE8B96045234C1AF768F3D0960F758C09D46FF7065D
A823D7F718072966B2D19B73163506725A41F2C73C72F24BEE8840F0A482AC6E
F1EEECC40E3FC65E13A25490C77F1964D7AF4B386FD32A36BA9FE3C3B2274513
D4503607978382A171758AAB9841B3F8FDE82DD847C69A507FBF0A9E9E601BD8
A9851F9065070E3F46B0C480895FAFC36093990293943A7352B298C4E74B3F47
6943809217EF311171DF5E418433D666A6EE89FA6BBD5D022D9708CA914BFBA6
E4AB7254E4AD31BED3768C836C5D77028E1FAB0C42B72021BE354925BC0F24EA
EE5BBF112A37A37D4C6D2AA2E5C6F994FF71607A5632A772391174F2AC05C53D
9C0DB86CBCF2ABD1F722D2B83C224FA89F8D98557E5BA3A5913D666354872205
FF9E90DB6CE3973FBBE5A99DB22AE0F507BB1A53DFD4EEBD3846CD0CBF1134F6
0D35A72C8F9D3B15FBBE90C308C6AFCF43A5F7CC1A30021F36FCD8A16684D659
4146ED54FD885CC8C3DC478D4F67DE8418AB22D5D250F9C13884F0FB185F653F
46A8A1CD4C534B05D36693B5357997690F02301F55C8ECB13221AFC11CCC4C52
7BD9FE9B5221210AA623A7285628EFD902B409E98ADBE47F653933213088FFCE
EE6A0477D849251488FC209786AED3062C02AC49A8AA967C55BCA0BFF8168857
87CFB4268C6D1CA54745293BAA7B9D27A17C656B02
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 175 /vextendsingle put
dup 177 /slashbig put
dup 88 /summationdisplay put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueID 5000774 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1CECEDA9D8BEA4AD62BA3D1CEC6121BD58420C4026CC665F578568D76
78EE47961E37464685729F9266E35EBCB873AD6BA18EA6B7CECBF533EE6BEF6C
F48C7AE93CDFA92CF88B719E5C2D6685938799BD748D9BF5541B88CC42BBB75B
3041ABAB436C881FC4388DDF84A6665FC8BC0CA878DB3869B5726D022CE9AE0F
6ADA35785A3D7128AD567BE1B95C4FEA1E602A9C68E2A5ED5EF83C603A3DE89D
C0D337ACE54400C1D5A14AD90C78101AC6E5596AE51F6E821AAA13E057FA8D09
6884D25E2FEC281E07F64C52B9411D31F2BD13EE61992FD11784E7425D7118CF
57E245ED5B30C9F12A98BB389B545C8AB6415D3FF9B1A11AF23AAD105088BBD8
536C2BDF3915628D80297FE85C4B0683C791AE0C799CCEBE2FDF6508C6482BC5
D894E179E494CFB8D687625261E94B27F28B36CF2A4A9B6A7F0C1DDD967499F3
2F6B352C483AC708754117DAE3E6EF1FEFBC45D9AB20A1F8A05CB20B4CECA58D
B25B2E2257AC81EABD40F04C319485A1F30AB7FA7704A66F7A02B13395AAC6FE
6A82AA2B2B5011AD7475B58F37DE59B50551D16F5627095D18C04ADE2CCE99A0
59A4D0B5F7BDFB416472C81710193D0D1F35D709911FAD42320AD24363F043ED
106BDB75FB0AEC5C62BA243BDDF6E502738BCB094E40A3F40E296F4CFE51C885
B124C3533D28F9C5565E71DF498DA6AC94596F0BB8A66D71BBD30574FDA6D4EA
04FA7D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 223761600 170636867 1000 8000 8000 (poster.dvi)
@start /Fa 138[1446 2[1136 2[1377 1515 1[689 10[1377
22[1414 74[{}7 2754.12 /CMTI12 rf /Fb 140[1760 1822 3[2479
7[1363 2036 1[1983 16[3328 82[{}7 3966.24 /CMBX12 rf
/Fc 241[1148 14[{}1 2295.84 /CMSY10 rf /Fd 138[1689 2[1659
8[832 1[1766 1[1536 30[1962 70[{}6 2754.12 /CMCSC10 rf
/Fe 135[1532 41[2159 78[{}2 2754.12 /CMMI12 rf /Ff 194[1653
11[1053 49[{}2 2295.84 /CMR17 rf /Fg 167[3978 88[{}1
2754.12 /CMEX10 rf /Fh 150[767 26[1800 78[{}2 2295.84
/CMMI12 rf /Fi 134[1335 1335 1839 1335 1407 975 990 975
1335 1407 1263 1407 2126 688 1[759 688 1407 1263 759
1119 1407 1119 1407 1263 3[688 1[688 1[1909 3[1909 1839
1407 1874 4[2341 3[902 3[1730 2[1802 1909 3[1983 2[688
3[1263 2[1263 1263 1263 1263 1[688 1[688 1983 1[975 975
27[1375 12[{}49 2754.12 /CMR17 rf /Fj 132[1819 1[1923
2[1923 2026 1405 1425 1405 2[1819 2026 4[990 2026 1819
1094 1612 2026 2[1819 7[2750 3[2750 4[2492 6[1299 4[2802
2648 2595 2750 13[1819 1819 1819 2[990 1[990 44[{}29
3966.24 /CMR17 rf /Fk 134[4204 3[4204 4052 3138 4128
2[4356 2[3519 2[2072 4204 1[3671 3823 16[5388 3[5084
80[{}13 6854.3 /CMCSC10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%PaperSize: A4
 @landscape
%%EndSetup
%%Page: 1 1
1 0 bop 0 1107 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 0.0 0.0 3243.61417
-2475.38976 .5 Frame  gsave gsave 1. 1. 1. setrgbcolor currentrgbcolor
grestore gsave 1. 1. 1. setrgbcolor currentrgbcolor grestore 300 0.5
0. tx@GradientDict begin GradientFill end grestore gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore end
 
@endspecial
14783 26642 a @beginspecial @setspecial
 tx@Dict begin STP newpath 5.69054 SLW 0. 0. 0.80 setrgbcolor  0.3
true 28.5114 neg 150.3288 neg 3002.90666 162.7688 .5 Frame  gsave 3.0
-45 PtoC Shadow 0.25 setgray gsave fill grestore stroke grestore gsave
1. 1. 1. setrgbcolor gsave fill grestore stroke grestore gsave gsave
1. 1. 1. setrgbcolor currentrgbcolor grestore gsave 0.80 0.80 1. setrgbcolor
currentrgbcolor grestore 300 1.0 0. tx@GradientDict begin GradientFill
end grestore gsave 5.69054 SLW 0. 0. 0.80 setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
20972 38219 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 20972 38219 a @beginspecial 141 @llx 371
@lly 496 @urx 766 @ury 1984 @rwi @setspecial
%%BeginDocument: gklogo.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 141 371 496 766 
%%LanguageLevel: 1
%%Creator: CorelDRAW 10
%%Title: gklogo.eps
%%CreationDate: Thu Nov 07 13:44:31 2002
%%DocumentProcessColors: Magenta Yellow 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 10 Version 10.410
%Color profile:  Generisches Offset-Auszugsprofil
/CorelIsEPS true def
%%BeginResource: procset wCorel10Dict 10.0 0
/wCorel10Dict 300 dict def wCorel10Dict begin
% Copyright (c)1992-2000 Corel Corporation
% All rights reserved.     v10.0 r0.2
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel10Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
141.90803 371.48372 495.68655 765.02239 @E
 0 O 0 @g
0.00 1.00 1.00 0.00 k
/$fm 0 def
248.18910 371.48315 m
232.01802 374.84192 221.38271 380.40860 208.44454 390.70176 c
168.60728 430.53987 152.40557 486.51761 143.41720 540.78633 c
141.58205 560.71984 140.55619 580.93512 145.56246 600.46526 c
148.48526 608.51934 151.50331 615.73408 156.01181 623.04236 c
170.65956 640.64466 189.00765 657.03288 208.84932 668.51008 c
230.77417 684.18198 253.84847 699.63846 274.90252 716.40142 c
301.52381 734.93546 329.07742 754.65383 360.86060 763.05033 c
380.88850 766.56359 397.55764 766.09672 415.75068 755.74091 c
422.06202 751.35600 427.87786 746.91014 433.63304 741.84009 c
437.67496 737.05039 441.71717 732.26098 445.76050 727.47156 c
449.18107 722.18551 452.63282 716.89861 456.08542 711.61200 c
482.55109 661.82343 500.40170 603.73049 494.58643 546.81846 c
491.16501 533.04180 487.40117 521.56602 479.00608 509.99783 c
474.68296 505.39550 470.36013 500.79260 466.03644 496.15852 c
434.13024 469.87994 399.01861 447.70677 366.14778 422.70406 c
345.62013 408.61672 325.28409 394.55887 303.20362 382.99039 c
291.35395 378.04564 279.50542 373.69134 266.78608 371.73203 c
260.59748 371.67080 254.41002 371.57669 248.18910 371.48315 c
@c
F

@rax %Note: Object
145.99814 373.22561 493.03587 762.64526 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 1.00 1.00 0.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
253.38217 373.22561 m
242.09376 375.15317 232.73235 378.04564 222.68806 383.36372 c
219.39052 385.78961 216.09496 388.24583 212.76822 390.70176 c
201.19918 400.96460 193.05071 412.00526 184.43679 425.00551 c
176.66107 439.62094 169.82050 454.14482 163.72545 469.50605 c
162.07597 474.32778 157.38066 483.65830 157.69134 488.53984 c
159.96189 481.79169 162.26334 475.04296 164.56450 468.29339 c
179.42995 434.05512 197.40501 395.52293 234.38154 380.81367 c
240.44570 379.07206 240.44570 379.07206 249.09109 377.36164 c
255.52913 377.36164 261.96548 377.36164 268.43471 377.36164 c
291.97644 381.18699 312.19143 392.81811 332.37383 405.03969 c
354.95235 421.52173 379.48876 436.10683 400.48072 454.61197 c
406.85556 458.15528 412.45285 463.44302 418.17600 467.98243 c
421.53392 470.00494 421.53392 470.00494 431.92176 478.21465 c
443.92649 488.57074 460.71893 501.72605 467.84098 516.37351 c
476.98299 527.35124 479.06674 545.72995 480.74769 559.44567 c
480.74769 565.60309 480.74769 571.76079 480.74769 577.91820 c
479.59569 587.27792 478.44652 596.63934 477.29480 606.00047 c
474.99392 615.20570 472.69162 624.41093 470.39131 633.64762 c
466.93899 644.43883 466.93899 644.43883 463.48639 653.52019 c
454.71742 673.76523 445.41780 691.48998 431.29899 708.56391 c
425.82557 713.75726 420.41537 718.73405 414.41272 723.33553 c
409.53005 725.91676 404.64822 728.49798 399.73408 731.11181 c
378.49380 736.73915 360.92211 734.65569 340.21077 726.78784 c
331.16117 722.40293 322.23657 717.83206 313.43528 712.94882 c
302.58198 705.98268 302.58198 705.98268 283.20718 692.23691 c
262.33909 675.69222 242.37354 659.17928 224.39792 639.46176 c
220.72904 634.64258 217.05959 629.82283 213.38929 625.00195 c
204.71357 609.85701 199.48791 597.16913 196.96961 579.65981 c
196.96961 571.91613 196.96961 564.17216 196.96961 556.42819 c
199.76854 535.52976 205.45880 517.89742 215.96995 499.39257 c
218.33461 496.03521 220.69843 492.64441 223.09228 489.25417 c
235.22060 476.62951 246.07502 467.92120 263.77030 465.02901 c
270.05046 465.02901 276.36520 465.02901 282.67852 465.02901 c
298.87994 467.45461 313.34060 474.66964 327.21137 483.19058 c
331.90724 487.04655 333.68060 487.94939 344.03698 496.15852 c
360.42520 510.96217 374.29455 526.47987 381.41660 547.78309 c
384.18520 559.04202 384.74476 569.89531 383.12787 581.37080 c
378.86627 596.82699 371.02989 607.70948 356.10180 613.18318 c
340.80123 616.26359 325.15852 613.52646 312.78161 603.44986 c
305.07024 600.09194 297.97824 588.98976 294.21609 581.86772 c
291.88261 574.37235 290.79496 568.43235 292.44387 560.75216 c
297.04535 550.55140 302.82973 550.55140 313.34060 550.55140 c
324.00765 554.43883 329.57546 559.28948 329.57546 571.01386 c
326.62120 578.56989 318.65924 576.11367 314.52321 571.07679 c
314.52321 566.78542 314.33698 563.76794 319.87162 565.69521 c
321.08372 567.43795 321.83206 569.92535 319.12639 570.08098 c
318.78340 567.93430 318.81458 567.31351 316.66932 567.43795 c
314.36787 570.01946 323.57254 578.60220 327.83357 569.36665 c
327.83357 561.68362 322.51691 557.39254 316.45134 554.00258 c
309.33014 551.45282 304.41543 551.48400 298.00970 555.96274 c
289.86180 565.22976 294.12198 576.79824 299.16057 586.59449 c
300.87099 587.37260 302.05276 589.89090 302.86205 591.53839 c
304.44718 592.56567 306.00227 594.43257 306.93430 596.07921 c
322.45342 608.92299 339.30879 616.94731 359.33641 609.66964 c
360.08306 608.86176 360.08306 608.86176 362.78759 607.92803 c
364.25055 606.68447 365.30872 605.56479 367.11043 604.91225 c
369.10233 602.42287 369.10233 602.42287 371.68328 600.24756 c
380.39046 587.15376 382.25735 578.10529 382.25735 562.80416 c
378.68145 535.24998 361.98028 515.65776 342.07710 497.46557 c
336.47783 493.45370 330.91285 489.22413 325.53213 484.90072 c
313.56000 478.02841 313.56000 478.02841 303.07861 472.80331 c
297.60520 471.09317 292.13263 469.35128 286.65836 467.60939 c
279.56863 466.55348 272.57187 466.76976 265.38633 466.76976 c
252.69874 468.66699 244.55083 474.04800 234.19417 481.04419 c
204.65036 510.58913 191.96192 555.02844 202.16324 595.73650 c
205.61471 605.22293 205.61471 605.22293 209.06787 612.99751 c
215.93962 624.81543 223.86954 635.23304 232.88910 645.52649 c
237.98863 650.09792 240.22800 652.86652 259.22891 670.12611 c
293.84220 697.83562 333.92891 732.82139 380.82643 732.82139 c
386.89058 732.16828 392.20866 730.98567 398.08630 729.36935 c
402.59565 727.06876 407.10472 724.73556 411.61465 722.40293 c
421.53392 714.62948 421.53392 714.62948 426.29216 710.30551 c
436.77298 698.67496 444.67285 686.73260 452.22860 673.04891 c
455.68148 665.42967 459.13323 657.81071 462.61644 650.16000 c
464.91732 643.25650 467.21820 636.35386 469.52050 629.41720 c
471.82167 619.49764 474.12312 609.57723 476.42428 599.62564 c
477.29480 591.85077 478.16589 584.07506 479.03528 576.30189 c
479.03528 547.41033 473.93603 518.76709 450.92296 498.73975 c
442.40230 488.25950 429.99335 479.70822 419.48107 471.28054 c
411.98797 467.29899 406.29713 460.55112 398.89446 456.32098 c
385.21134 444.84661 370.09757 435.17395 356.19562 424.00885 c
327.27317 406.06554 301.43055 385.22948 266.78608 379.07206 c
261.43710 379.07206 256.08898 379.07206 250.70910 379.07206 c
242.56063 380.68866 235.81247 382.64797 228.25531 385.97528 c
217.49443 392.84872 217.49443 392.84872 212.14517 396.82942 c
205.24195 404.01156 198.80391 411.01087 192.64620 418.97112 c
163.75550 462.13682 149.23361 514.84819 145.99814 566.25676 c
146.27792 572.19477 146.55912 578.13591 146.86923 584.07506 c
148.73584 592.87691 150.47603 600.77650 153.77386 609.11036 c
160.73915 621.76677 161.54702 622.51313 162.48104 624.34743 c
166.92803 629.07449 171.40649 633.83357 175.88466 638.59266 c
191.46586 651.15524 206.85742 664.49707 223.96394 674.97789 c
225.67408 676.40854 227.38365 677.83861 229.12611 679.27011 c
270.73587 708.47093 310.26217 743.33339 359.11928 759.59745 c
367.76409 761.33962 367.76409 761.33962 376.84573 762.64526 c
385.98775 762.21014 385.98775 762.21014 393.76318 761.33962 c
410.30731 756.76791 422.00050 748.15342 434.16057 736.49169 c
445.23099 722.99395 454.43650 708.75128 462.61644 693.32712 c
466.06904 685.27134 469.52050 677.21754 472.97197 669.16233 c
474.12312 665.98923 475.27370 662.81783 476.42428 659.64529 c
487.80567 621.20835 496.70079 584.51074 491.53833 544.23723 c
490.38605 540.22620 489.23688 536.18372 488.08545 532.14009 c
483.35896 521.47389 478.00942 513.01531 470.36013 504.36935 c
460.93663 495.47480 460.93663 495.47480 456.08542 491.40085 c
424.45786 468.04620 421.34712 466.27257 381.47981 437.16472 c
342.72879 410.48249 302.92384 374.96750 253.38217 373.22561 c
@c
B

@rax %Note: Object
150.32126 491.99187 156.38542 516.62211 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
156.19748 491.99187 m
154.24044 499.61140 152.28000 507.22951 150.32069 514.84819 c
150.32069 515.44091 150.32069 516.03080 150.35187 516.62268 c
152.34293 508.87843 154.36460 501.13417 156.38513 493.36072 c
156.32334 492.92561 156.26211 492.45902 156.19748 491.99187 c
@c
F

@rax %Note: Object
145.15880 525.70290 147.98863 549.86683 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
147.98835 525.70318 m
146.83776 533.72665 145.15852 541.75039 145.15852 549.86627 c
146.09083 541.81247 147.02513 533.75726 147.98835 525.70318 c
@c
F

@rax %Note: Object
144.01587 556.36639 144.72340 583.57786 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
144.10148 556.36639 m
144.03855 565.54016 143.75991 574.46561 144.72283 583.57757 c
144.53631 574.52854 144.31861 565.44746 144.10148 556.36639 c
@c
F

@rax %Note: Object
144.94110 585.72369 146.90013 596.07978 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
144.94082 585.72397 m
145.59392 589.17572 146.24646 592.62746 146.90013 596.07921 c
145.56246 587.43411 145.56246 587.43411 144.94082 585.72397 c
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel10Dict 10.0 0
%%EOF

%%EndDocument
 @endspecial 43019 38219 a
 currentpoint grestore moveto
 43019 38219 a 118979 20844
a Fk(This)2588 b(is)h(the)g(Title)f(of)i(your)f(Poster)144589
28975 y Fj(A.)1197 b(Author1,)g(B.)h(Author2)f(and)g(C.)h(Author3)
130706 34974 y(Institute)f(of)g(P)-104 b(oster{Design,)1197
b(Univ)-104 b(ersit)g(y)-311 b(,)1198 b(Y)-311 b(our)1197
b(Cit)-104 b(y)-311 b(,)1197 b(Coun)-104 b(try)310916
38219 y
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 310916 38219 a @beginspecial 141 @llx 371 @lly
496 @urx 766 @ury 1984 @rwi @setspecial
%%BeginDocument: gklogo.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 141 371 496 766 
%%LanguageLevel: 1
%%Creator: CorelDRAW 10
%%Title: gklogo.eps
%%CreationDate: Thu Nov 07 13:44:31 2002
%%DocumentProcessColors: Magenta Yellow 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 10 Version 10.410
%Color profile:  Generisches Offset-Auszugsprofil
/CorelIsEPS true def
%%BeginResource: procset wCorel10Dict 10.0 0
/wCorel10Dict 300 dict def wCorel10Dict begin
% Copyright (c)1992-2000 Corel Corporation
% All rights reserved.     v10.0 r0.2
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel10Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
141.90803 371.48372 495.68655 765.02239 @E
 0 O 0 @g
0.00 1.00 1.00 0.00 k
/$fm 0 def
248.18910 371.48315 m
232.01802 374.84192 221.38271 380.40860 208.44454 390.70176 c
168.60728 430.53987 152.40557 486.51761 143.41720 540.78633 c
141.58205 560.71984 140.55619 580.93512 145.56246 600.46526 c
148.48526 608.51934 151.50331 615.73408 156.01181 623.04236 c
170.65956 640.64466 189.00765 657.03288 208.84932 668.51008 c
230.77417 684.18198 253.84847 699.63846 274.90252 716.40142 c
301.52381 734.93546 329.07742 754.65383 360.86060 763.05033 c
380.88850 766.56359 397.55764 766.09672 415.75068 755.74091 c
422.06202 751.35600 427.87786 746.91014 433.63304 741.84009 c
437.67496 737.05039 441.71717 732.26098 445.76050 727.47156 c
449.18107 722.18551 452.63282 716.89861 456.08542 711.61200 c
482.55109 661.82343 500.40170 603.73049 494.58643 546.81846 c
491.16501 533.04180 487.40117 521.56602 479.00608 509.99783 c
474.68296 505.39550 470.36013 500.79260 466.03644 496.15852 c
434.13024 469.87994 399.01861 447.70677 366.14778 422.70406 c
345.62013 408.61672 325.28409 394.55887 303.20362 382.99039 c
291.35395 378.04564 279.50542 373.69134 266.78608 371.73203 c
260.59748 371.67080 254.41002 371.57669 248.18910 371.48315 c
@c
F

@rax %Note: Object
145.99814 373.22561 493.03587 762.64526 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 1.00 1.00 0.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
253.38217 373.22561 m
242.09376 375.15317 232.73235 378.04564 222.68806 383.36372 c
219.39052 385.78961 216.09496 388.24583 212.76822 390.70176 c
201.19918 400.96460 193.05071 412.00526 184.43679 425.00551 c
176.66107 439.62094 169.82050 454.14482 163.72545 469.50605 c
162.07597 474.32778 157.38066 483.65830 157.69134 488.53984 c
159.96189 481.79169 162.26334 475.04296 164.56450 468.29339 c
179.42995 434.05512 197.40501 395.52293 234.38154 380.81367 c
240.44570 379.07206 240.44570 379.07206 249.09109 377.36164 c
255.52913 377.36164 261.96548 377.36164 268.43471 377.36164 c
291.97644 381.18699 312.19143 392.81811 332.37383 405.03969 c
354.95235 421.52173 379.48876 436.10683 400.48072 454.61197 c
406.85556 458.15528 412.45285 463.44302 418.17600 467.98243 c
421.53392 470.00494 421.53392 470.00494 431.92176 478.21465 c
443.92649 488.57074 460.71893 501.72605 467.84098 516.37351 c
476.98299 527.35124 479.06674 545.72995 480.74769 559.44567 c
480.74769 565.60309 480.74769 571.76079 480.74769 577.91820 c
479.59569 587.27792 478.44652 596.63934 477.29480 606.00047 c
474.99392 615.20570 472.69162 624.41093 470.39131 633.64762 c
466.93899 644.43883 466.93899 644.43883 463.48639 653.52019 c
454.71742 673.76523 445.41780 691.48998 431.29899 708.56391 c
425.82557 713.75726 420.41537 718.73405 414.41272 723.33553 c
409.53005 725.91676 404.64822 728.49798 399.73408 731.11181 c
378.49380 736.73915 360.92211 734.65569 340.21077 726.78784 c
331.16117 722.40293 322.23657 717.83206 313.43528 712.94882 c
302.58198 705.98268 302.58198 705.98268 283.20718 692.23691 c
262.33909 675.69222 242.37354 659.17928 224.39792 639.46176 c
220.72904 634.64258 217.05959 629.82283 213.38929 625.00195 c
204.71357 609.85701 199.48791 597.16913 196.96961 579.65981 c
196.96961 571.91613 196.96961 564.17216 196.96961 556.42819 c
199.76854 535.52976 205.45880 517.89742 215.96995 499.39257 c
218.33461 496.03521 220.69843 492.64441 223.09228 489.25417 c
235.22060 476.62951 246.07502 467.92120 263.77030 465.02901 c
270.05046 465.02901 276.36520 465.02901 282.67852 465.02901 c
298.87994 467.45461 313.34060 474.66964 327.21137 483.19058 c
331.90724 487.04655 333.68060 487.94939 344.03698 496.15852 c
360.42520 510.96217 374.29455 526.47987 381.41660 547.78309 c
384.18520 559.04202 384.74476 569.89531 383.12787 581.37080 c
378.86627 596.82699 371.02989 607.70948 356.10180 613.18318 c
340.80123 616.26359 325.15852 613.52646 312.78161 603.44986 c
305.07024 600.09194 297.97824 588.98976 294.21609 581.86772 c
291.88261 574.37235 290.79496 568.43235 292.44387 560.75216 c
297.04535 550.55140 302.82973 550.55140 313.34060 550.55140 c
324.00765 554.43883 329.57546 559.28948 329.57546 571.01386 c
326.62120 578.56989 318.65924 576.11367 314.52321 571.07679 c
314.52321 566.78542 314.33698 563.76794 319.87162 565.69521 c
321.08372 567.43795 321.83206 569.92535 319.12639 570.08098 c
318.78340 567.93430 318.81458 567.31351 316.66932 567.43795 c
314.36787 570.01946 323.57254 578.60220 327.83357 569.36665 c
327.83357 561.68362 322.51691 557.39254 316.45134 554.00258 c
309.33014 551.45282 304.41543 551.48400 298.00970 555.96274 c
289.86180 565.22976 294.12198 576.79824 299.16057 586.59449 c
300.87099 587.37260 302.05276 589.89090 302.86205 591.53839 c
304.44718 592.56567 306.00227 594.43257 306.93430 596.07921 c
322.45342 608.92299 339.30879 616.94731 359.33641 609.66964 c
360.08306 608.86176 360.08306 608.86176 362.78759 607.92803 c
364.25055 606.68447 365.30872 605.56479 367.11043 604.91225 c
369.10233 602.42287 369.10233 602.42287 371.68328 600.24756 c
380.39046 587.15376 382.25735 578.10529 382.25735 562.80416 c
378.68145 535.24998 361.98028 515.65776 342.07710 497.46557 c
336.47783 493.45370 330.91285 489.22413 325.53213 484.90072 c
313.56000 478.02841 313.56000 478.02841 303.07861 472.80331 c
297.60520 471.09317 292.13263 469.35128 286.65836 467.60939 c
279.56863 466.55348 272.57187 466.76976 265.38633 466.76976 c
252.69874 468.66699 244.55083 474.04800 234.19417 481.04419 c
204.65036 510.58913 191.96192 555.02844 202.16324 595.73650 c
205.61471 605.22293 205.61471 605.22293 209.06787 612.99751 c
215.93962 624.81543 223.86954 635.23304 232.88910 645.52649 c
237.98863 650.09792 240.22800 652.86652 259.22891 670.12611 c
293.84220 697.83562 333.92891 732.82139 380.82643 732.82139 c
386.89058 732.16828 392.20866 730.98567 398.08630 729.36935 c
402.59565 727.06876 407.10472 724.73556 411.61465 722.40293 c
421.53392 714.62948 421.53392 714.62948 426.29216 710.30551 c
436.77298 698.67496 444.67285 686.73260 452.22860 673.04891 c
455.68148 665.42967 459.13323 657.81071 462.61644 650.16000 c
464.91732 643.25650 467.21820 636.35386 469.52050 629.41720 c
471.82167 619.49764 474.12312 609.57723 476.42428 599.62564 c
477.29480 591.85077 478.16589 584.07506 479.03528 576.30189 c
479.03528 547.41033 473.93603 518.76709 450.92296 498.73975 c
442.40230 488.25950 429.99335 479.70822 419.48107 471.28054 c
411.98797 467.29899 406.29713 460.55112 398.89446 456.32098 c
385.21134 444.84661 370.09757 435.17395 356.19562 424.00885 c
327.27317 406.06554 301.43055 385.22948 266.78608 379.07206 c
261.43710 379.07206 256.08898 379.07206 250.70910 379.07206 c
242.56063 380.68866 235.81247 382.64797 228.25531 385.97528 c
217.49443 392.84872 217.49443 392.84872 212.14517 396.82942 c
205.24195 404.01156 198.80391 411.01087 192.64620 418.97112 c
163.75550 462.13682 149.23361 514.84819 145.99814 566.25676 c
146.27792 572.19477 146.55912 578.13591 146.86923 584.07506 c
148.73584 592.87691 150.47603 600.77650 153.77386 609.11036 c
160.73915 621.76677 161.54702 622.51313 162.48104 624.34743 c
166.92803 629.07449 171.40649 633.83357 175.88466 638.59266 c
191.46586 651.15524 206.85742 664.49707 223.96394 674.97789 c
225.67408 676.40854 227.38365 677.83861 229.12611 679.27011 c
270.73587 708.47093 310.26217 743.33339 359.11928 759.59745 c
367.76409 761.33962 367.76409 761.33962 376.84573 762.64526 c
385.98775 762.21014 385.98775 762.21014 393.76318 761.33962 c
410.30731 756.76791 422.00050 748.15342 434.16057 736.49169 c
445.23099 722.99395 454.43650 708.75128 462.61644 693.32712 c
466.06904 685.27134 469.52050 677.21754 472.97197 669.16233 c
474.12312 665.98923 475.27370 662.81783 476.42428 659.64529 c
487.80567 621.20835 496.70079 584.51074 491.53833 544.23723 c
490.38605 540.22620 489.23688 536.18372 488.08545 532.14009 c
483.35896 521.47389 478.00942 513.01531 470.36013 504.36935 c
460.93663 495.47480 460.93663 495.47480 456.08542 491.40085 c
424.45786 468.04620 421.34712 466.27257 381.47981 437.16472 c
342.72879 410.48249 302.92384 374.96750 253.38217 373.22561 c
@c
B

@rax %Note: Object
150.32126 491.99187 156.38542 516.62211 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
156.19748 491.99187 m
154.24044 499.61140 152.28000 507.22951 150.32069 514.84819 c
150.32069 515.44091 150.32069 516.03080 150.35187 516.62268 c
152.34293 508.87843 154.36460 501.13417 156.38513 493.36072 c
156.32334 492.92561 156.26211 492.45902 156.19748 491.99187 c
@c
F

@rax %Note: Object
145.15880 525.70290 147.98863 549.86683 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
147.98835 525.70318 m
146.83776 533.72665 145.15852 541.75039 145.15852 549.86627 c
146.09083 541.81247 147.02513 533.75726 147.98835 525.70318 c
@c
F

@rax %Note: Object
144.01587 556.36639 144.72340 583.57786 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
144.10148 556.36639 m
144.03855 565.54016 143.75991 574.46561 144.72283 583.57757 c
144.53631 574.52854 144.31861 565.44746 144.10148 556.36639 c
@c
F

@rax %Note: Object
144.94110 585.72369 146.90013 596.07978 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
144.94082 585.72397 m
145.59392 589.17572 146.24646 592.62746 146.90013 596.07921 c
145.56246 587.43411 145.56246 587.43411 144.94082 585.72397 c
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel10Dict 10.0 0
%%EOF

%%EndDocument
 @endspecial 332963 38219 a
 currentpoint grestore moveto
 332963 38219 a 12812 60366
a @beginspecial @setspecial
 tx@Dict begin STP newpath 5.69054 SLW 0. 0. 0.80 setrgbcolor  0.1
true 28.5114 neg 836.30489 neg 959.0217 74.30058 .5 Frame  gsave 3.0
-45 PtoC Shadow 0.25 setgray gsave fill grestore stroke grestore gsave
1. 1. 1. setrgbcolor gsave fill grestore stroke grestore gsave gsave
1. 1. 1. setrgbcolor currentrgbcolor grestore gsave 1. 1. 1. setrgbcolor
currentrgbcolor grestore 300 1.0 0. tx@GradientDict begin GradientFill
end grestore gsave 5.69054 SLW 0. 0. 0.80 setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 10017 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 5.69054 SLW 0. 0. 0.80 setrgbcolor  0.1
true 28.5114 neg 28.5114 neg 775.9268 45.78918 .5 Frame  gsave 3.0
-45 PtoC Shadow 0.25 setgray gsave fill grestore stroke grestore gsave
1. 1. 1. setrgbcolor gsave fill grestore stroke grestore gsave gsave
1. 1. 1. setrgbcolor currentrgbcolor grestore gsave 0.80 0.80 1. setrgbcolor
currentrgbcolor grestore 300 1.0 0. tx@GradientDict begin GradientFill
end grestore gsave 5.69054 SLW 0. 0. 0.80 setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 36560 w Fi(Abstract)13644 69717
y(This)676 b(is)g(y)-72 b(our)678 b(abstract)g(of)f(this)g(p)72
b(oster)678 b(or)f(just)h(put)f(y)-72 b(our)678 b(abstract)g(of)f(y)-72
b(our)678 b(pap)72 b(er)678 b(here...)1067 b(This)676
b(is)g(y)-72 b(our)13644 73038 y(abstract)751 b(of)g(this)f(p)72
b(oster)750 b(or)h(just)g(put)f(y)-72 b(our)751 b(abstract)g(of)g(y)-72
b(our)751 b(pap)72 b(er)751 b(here...)1091 b(This)749
b(is)h(y)-72 b(our)751 b(abstract)g(of)13644 76359 y(this)757
b(p)72 b(oster)759 b(or)g(just)f(put)h(y)-72 b(our)759
b(abstract)g(of)g(y)-72 b(our)758 b(pap)72 b(er)759 b(here...)1094
b(This)757 b(is)h(y)-72 b(our)758 b(abstract)h(of)g(this)f(p)72
b(oster)13644 79680 y(or)1005 b(just)g(put)g(y)-72 b(our)1006
b(abstract)g(of)f(y)-72 b(our)1005 b(pap)72 b(er)1006
b(here...)1639 b(This)1003 b(is)h(y)-72 b(our)1006 b(abstract)g(of)f
(this)f(p)72 b(oster)1006 b(or)f(just)13644 83001 y(put)882
b(y)-72 b(our)883 b(abstract)g(of)g(y)-72 b(our)883 b(pap)72
b(er)883 b(here...)1271 b(This)881 b(is)h(y)-72 b(our)883
b(abstract)g(of)g(this)f(p)72 b(oster)883 b(or)g(just)f(put)h(y)-72
b(our)13644 86322 y(abstract)917 b(of)g(y)-72 b(our)917
b(pap)72 b(er)917 b(here...)1373 b(This)915 b(is)h(y)-72
b(our)916 b(abstract)i(of)f(this)f(p)72 b(oster)917 b(or)f(just)h(put)g
(y)-72 b(our)917 b(abstract)13644 89642 y(of)832 b(y)-72
b(our)832 b(pap)72 b(er)831 b(here...)22829 102764 y
@beginspecial @setspecial
 tx@Dict begin STP newpath 5.69054 SLW 0. 0. 0.80 setrgbcolor  0.1
true 28.5114 neg 28.5114 neg 775.9268 45.78918 .5 Frame  gsave 3.0
-45 PtoC Shadow 0.25 setgray gsave fill grestore stroke grestore gsave
1. 1. 1. setrgbcolor gsave fill grestore stroke grestore gsave gsave
1. 1. 1. setrgbcolor currentrgbcolor grestore gsave 0.80 0.80 1. setrgbcolor
currentrgbcolor grestore 300 1.0 0. tx@GradientDict begin GradientFill
end grestore gsave 5.69054 SLW 0. 0. 0.80 setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 34473 w(In)-72
b(tro)72 b(duction)13644 113222 y(Y)-216 b(our)668 b(text)g(with)f
(scien)-72 b(ti\257c)668 b(results)f(or)h(what)f(ev)-72
b(er...)1064 b(Y)-216 b(our)669 b(text)f(with)f(scien)-72
b(ti\257c)667 b(results)h(or)g(what)f(ev)-72 b(er...)13644
116543 y(Y)-216 b(our)668 b(text)g(with)f(scien)-72 b(ti\257c)668
b(results)f(or)h(what)f(ev)-72 b(er...)1064 b(Y)-216
b(our)669 b(text)f(with)f(scien)-72 b(ti\257c)667 b(results)h(or)g
(what)f(ev)-72 b(er...)13644 119864 y(Y)-216 b(our)668
b(text)g(with)f(scien)-72 b(ti\257c)668 b(results)f(or)h(what)f(ev)-72
b(er...)1064 b(Y)-216 b(our)669 b(text)f(with)f(scien)-72
b(ti\257c)667 b(results)h(or)g(what)f(ev)-72 b(er...)13644
123184 y(Y)-216 b(our)668 b(text)g(with)f(scien)-72 b(ti\257c)668
b(results)f(or)h(what)f(ev)-72 b(er...)1064 b(Y)-216
b(our)669 b(text)f(with)f(scien)-72 b(ti\257c)667 b(results)h(or)g
(what)f(ev)-72 b(er...)13644 126505 y(Y)-216 b(our)832
b(text)g(with)f(scien)-72 b(ti\257c)832 b(results)f(or)h(what)f(ev)-72
b(er...)13644 129826 y(Y)-216 b(our)668 b(text)g(with)f(scien)-72
b(ti\257c)668 b(results)f(or)h(what)f(ev)-72 b(er...)1064
b(Y)-216 b(our)669 b(text)f(with)f(scien)-72 b(ti\257c)667
b(results)h(or)g(what)f(ev)-72 b(er...)13644 133147 y(Y)-216
b(our)668 b(text)g(with)f(scien)-72 b(ti\257c)668 b(results)f(or)h
(what)f(ev)-72 b(er...)1064 b(Y)-216 b(our)669 b(text)f(with)f(scien)
-72 b(ti\257c)667 b(results)h(or)g(what)f(ev)-72 b(er...)13644
136468 y(Y)-216 b(our)668 b(text)g(with)f(scien)-72 b(ti\257c)668
b(results)f(or)h(what)f(ev)-72 b(er...)1064 b(Y)-216
b(our)669 b(text)f(with)f(scien)-72 b(ti\257c)667 b(results)h(or)g
(what)f(ev)-72 b(er...)13644 139789 y(Y)-216 b(our)832
b(text)g(with)f(scien)-72 b(ti\257c)832 b(results)f(or)h(what)f(ev)-72
b(er...)127908 57210 y @beginspecial @setspecial
 tx@Dict begin STP newpath 5.69054 SLW 0. 0. 0.80 setrgbcolor  0.1
true 28.5114 neg 864.81628 neg 959.0217 45.78918 .5 Frame  gsave 3.0
-45 PtoC Shadow 0.25 setgray gsave fill grestore stroke grestore gsave
1. 1. 1. setrgbcolor gsave fill grestore stroke grestore gsave gsave
1. 1. 1. setrgbcolor currentrgbcolor grestore gsave 1. 1. 1. setrgbcolor
currentrgbcolor grestore 300 1.0 0. tx@GradientDict begin GradientFill
end grestore gsave 5.69054 SLW 0. 0. 0.80 setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
832 w(Y)-216 b(our)668 b(text)h(with)d(scien)-72 b(ti\257c)668
b(results)f(or)h(what)f(ev)-72 b(er...)1064 b(Y)-216
b(our)669 b(text)f(with)f(scien)-72 b(ti\257c)668 b(results)f(or)h
(what)f(ev)-72 b(er...)128740 60531 y(Y)-216 b(our)668
b(text)h(with)d(scien)-72 b(ti\257c)668 b(results)f(or)h(what)f(ev)-72
b(er...)1064 b(Y)-216 b(our)669 b(text)f(with)f(scien)-72
b(ti\257c)668 b(results)f(or)h(what)f(ev)-72 b(er...)128740
63852 y(Y)-216 b(our)832 b(text)g(with)f(scien)-72 b(ti\257c)832
b(results)f(or)h(what)f(ev)-72 b(er...)169848 69127 y
Fh(N)168879 69954 y Fg(X)169132 76049 y Fh(i)p Ff(=1)173316
72570 y Fe(x)766 b Fi(=)178494 70707 y(\()p Fe(N)900
b Fi(+)612 b(1\))p Fe(N)p 178494 71937 11315 111 v 183520
74459 a Fi(2)226867 72570 y(\(1\))128740 79787 y(Y)-216
b(our)806 b(text)h(with)e(scien)-72 b(ti\257c)805 b(results)h(or)g
(what)f(ev)-72 b(er...)1110 b(equation)806 b(2...)1109
b(Y)-216 b(our)807 b(text)f(with)f(scien)-72 b(ti\257c)806
b(results)128740 83108 y(or)639 b(what)f(ev)-72 b(er...)1054
b(Y)-216 b(our)640 b(text)f(with)f(scien)-72 b(ti\257c)638
b(results)g(or)h(what)g(ev)-72 b(er...)1054 b(Y)-216
b(our)639 b(text)h(with)e(scien)-72 b(ti\257c)638 b(results)128740
86428 y(or)h(what)f(ev)-72 b(er...)1054 b(Y)-216 b(our)640
b(text)f(with)f(scien)-72 b(ti\257c)638 b(results)g(or)h(what)g(ev)-72
b(er...)1054 b(Y)-216 b(our)639 b(text)h(with)e(scien)-72
b(ti\257c)638 b(results)128740 89749 y(or)h(what)f(ev)-72
b(er...)1054 b(Y)-216 b(our)640 b(text)f(with)f(scien)-72
b(ti\257c)638 b(results)g(or)h(what)g(ev)-72 b(er...)1054
b(Y)-216 b(our)639 b(text)h(with)e(scien)-72 b(ti\257c)638
b(results)128740 93070 y(or)h(what)f(ev)-72 b(er...)1054
b(Y)-216 b(our)640 b(text)f(with)f(scien)-72 b(ti\257c)638
b(results)g(or)h(what)g(ev)-72 b(er...)1054 b(Y)-216
b(our)639 b(text)h(with)e(scien)-72 b(ti\257c)638 b(results)128740
96391 y(or)832 b(what)f(ev)-72 b(er...)137925 107839
y @beginspecial @setspecial
 tx@Dict begin STP newpath 5.69054 SLW 0. 0. 0.80 setrgbcolor  0.1
true 28.5114 neg 28.5114 neg 775.9268 45.50922 .5 Frame  gsave 3.0
-45 PtoC Shadow 0.25 setgray gsave fill grestore stroke grestore gsave
1. 1. 1. setrgbcolor gsave fill grestore stroke grestore gsave gsave
1. 1. 1. setrgbcolor currentrgbcolor grestore gsave 0.80 0.80 1. setrgbcolor
currentrgbcolor grestore 300 1.0 0. tx@GradientDict begin GradientFill
end grestore gsave 5.69054 SLW 0. 0. 0.80 setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 37379 w(Section)128740
117340 y([AA01])1005 b(Y)-216 b(our)1007 b(text)f(with)f(scien)-72
b(ti\257c)1005 b(results)h(or)g(what)f(ev)-72 b(er...)1641
b(Y)-216 b(our)1006 b(text)h(with)e(scien)-72 b(ti\257c)1005
b(results)g(or)128740 120661 y(what)855 b(ev)-72 b(er...)1191
b(Y)-216 b(our)856 b(text)h(with)d(scien)-72 b(ti\257c)856
b(results)f(or)h(what)f(ev)-72 b(er...)1191 b(Y)-216
b(our)856 b(text)h(with)e(scien)-72 b(ti\257c)855 b(results)128740
123982 y(or)639 b(what)f(ev)-72 b(er...)1054 b(Y)-216
b(our)640 b(text)f(with)f(scien)-72 b(ti\257c)638 b(results)g(or)h
(what)g(ev)-72 b(er...)1054 b(Y)-216 b(our)639 b(text)h(with)e(scien)
-72 b(ti\257c)638 b(results)128740 127303 y(or)h(what)f(ev)-72
b(er...)1054 b(Y)-216 b(our)640 b(text)f(with)f(scien)-72
b(ti\257c)638 b(results)g(or)h(what)g(ev)-72 b(er...)1054
b(Y)-216 b(our)639 b(text)h(with)e(scien)-72 b(ti\257c)638
b(results)128740 130624 y(or)h(what)f(ev)-72 b(er...)1054
b(Y)-216 b(our)640 b(text)f(with)f(scien)-72 b(ti\257c)638
b(results)g(or)h(what)g(ev)-72 b(er...)1054 b(Y)-216
b(our)639 b(text)h(with)e(scien)-72 b(ti\257c)638 b(results)128740
133945 y(or)832 b(what)f(ev)-72 b(er...)243004 57210
y @beginspecial @setspecial
 tx@Dict begin STP newpath 5.69054 SLW 0. 0. 0.80 setrgbcolor  0.1
true 28.5114 neg 864.81628 neg 959.0217 45.78918 .5 Frame  gsave 3.0
-45 PtoC Shadow 0.25 setgray gsave fill grestore stroke grestore gsave
1. 1. 1. setrgbcolor gsave fill grestore stroke grestore gsave gsave
1. 1. 1. setrgbcolor currentrgbcolor grestore gsave 1. 1. 1. setrgbcolor
currentrgbcolor grestore 300 1.0 0. tx@GradientDict begin GradientFill
end grestore gsave 5.69054 SLW 0. 0. 0.80 setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 832 w(Y)-216
b(our)668 b(text)h(with)e(scien)-72 b(ti\257c)667 b(results)g(or)h
(what)f(ev)-72 b(er...)1064 b(Y)-216 b(our)669 b(text)f(with)f(scien)
-72 b(ti\257c)668 b(results)f(or)h(what)f(ev)-72 b(er...)243836
60531 y(Y)-216 b(our)668 b(text)h(with)e(scien)-72 b(ti\257c)667
b(results)g(or)h(what)f(ev)-72 b(er...)1064 b(Y)-216
b(our)669 b(text)f(with)f(scien)-72 b(ti\257c)668 b(results)f(or)h
(what)f(ev)-72 b(er...)243836 63852 y(Y)-216 b(our)668
b(text)h(with)e(scien)-72 b(ti\257c)667 b(results)g(or)h(what)f(ev)-72
b(er...)1064 b(Y)-216 b(our)669 b(text)f(with)f(scien)-72
b(ti\257c)668 b(results)f(or)h(what)f(ev)-72 b(er...)243836
67172 y(Y)-216 b(our)668 b(text)h(with)e(scien)-72 b(ti\257c)667
b(results)g(or)h(what)f(ev)-72 b(er...)1064 b(Y)-216
b(our)669 b(text)f(with)f(scien)-72 b(ti\257c)668 b(results)f(or)h
(what)f(ev)-72 b(er...)243836 70493 y(Y)-216 b(our)832
b(text)h(with)d(scien)-72 b(ti\257c)832 b(results)f(or)h(what)f(ev)-72
b(er...)291737 97575 y
 gsave currentpoint currentpoint translate 30 neg rotate neg exch neg
exch translate
 291737 97575 a @beginspecial 141
@llx 371 @lly 496 @urx 766 @ury 1368 @rwi @setspecial
%%BeginDocument: gklogo.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 141 371 496 766 
%%LanguageLevel: 1
%%Creator: CorelDRAW 10
%%Title: gklogo.eps
%%CreationDate: Thu Nov 07 13:44:31 2002
%%DocumentProcessColors: Magenta Yellow 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 10 Version 10.410
%Color profile:  Generisches Offset-Auszugsprofil
/CorelIsEPS true def
%%BeginResource: procset wCorel10Dict 10.0 0
/wCorel10Dict 300 dict def wCorel10Dict begin
% Copyright (c)1992-2000 Corel Corporation
% All rights reserved.     v10.0 r0.2
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel10Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
141.90803 371.48372 495.68655 765.02239 @E
 0 O 0 @g
0.00 1.00 1.00 0.00 k
/$fm 0 def
248.18910 371.48315 m
232.01802 374.84192 221.38271 380.40860 208.44454 390.70176 c
168.60728 430.53987 152.40557 486.51761 143.41720 540.78633 c
141.58205 560.71984 140.55619 580.93512 145.56246 600.46526 c
148.48526 608.51934 151.50331 615.73408 156.01181 623.04236 c
170.65956 640.64466 189.00765 657.03288 208.84932 668.51008 c
230.77417 684.18198 253.84847 699.63846 274.90252 716.40142 c
301.52381 734.93546 329.07742 754.65383 360.86060 763.05033 c
380.88850 766.56359 397.55764 766.09672 415.75068 755.74091 c
422.06202 751.35600 427.87786 746.91014 433.63304 741.84009 c
437.67496 737.05039 441.71717 732.26098 445.76050 727.47156 c
449.18107 722.18551 452.63282 716.89861 456.08542 711.61200 c
482.55109 661.82343 500.40170 603.73049 494.58643 546.81846 c
491.16501 533.04180 487.40117 521.56602 479.00608 509.99783 c
474.68296 505.39550 470.36013 500.79260 466.03644 496.15852 c
434.13024 469.87994 399.01861 447.70677 366.14778 422.70406 c
345.62013 408.61672 325.28409 394.55887 303.20362 382.99039 c
291.35395 378.04564 279.50542 373.69134 266.78608 371.73203 c
260.59748 371.67080 254.41002 371.57669 248.18910 371.48315 c
@c
F

@rax %Note: Object
145.99814 373.22561 493.03587 762.64526 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 1.00 1.00 0.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
253.38217 373.22561 m
242.09376 375.15317 232.73235 378.04564 222.68806 383.36372 c
219.39052 385.78961 216.09496 388.24583 212.76822 390.70176 c
201.19918 400.96460 193.05071 412.00526 184.43679 425.00551 c
176.66107 439.62094 169.82050 454.14482 163.72545 469.50605 c
162.07597 474.32778 157.38066 483.65830 157.69134 488.53984 c
159.96189 481.79169 162.26334 475.04296 164.56450 468.29339 c
179.42995 434.05512 197.40501 395.52293 234.38154 380.81367 c
240.44570 379.07206 240.44570 379.07206 249.09109 377.36164 c
255.52913 377.36164 261.96548 377.36164 268.43471 377.36164 c
291.97644 381.18699 312.19143 392.81811 332.37383 405.03969 c
354.95235 421.52173 379.48876 436.10683 400.48072 454.61197 c
406.85556 458.15528 412.45285 463.44302 418.17600 467.98243 c
421.53392 470.00494 421.53392 470.00494 431.92176 478.21465 c
443.92649 488.57074 460.71893 501.72605 467.84098 516.37351 c
476.98299 527.35124 479.06674 545.72995 480.74769 559.44567 c
480.74769 565.60309 480.74769 571.76079 480.74769 577.91820 c
479.59569 587.27792 478.44652 596.63934 477.29480 606.00047 c
474.99392 615.20570 472.69162 624.41093 470.39131 633.64762 c
466.93899 644.43883 466.93899 644.43883 463.48639 653.52019 c
454.71742 673.76523 445.41780 691.48998 431.29899 708.56391 c
425.82557 713.75726 420.41537 718.73405 414.41272 723.33553 c
409.53005 725.91676 404.64822 728.49798 399.73408 731.11181 c
378.49380 736.73915 360.92211 734.65569 340.21077 726.78784 c
331.16117 722.40293 322.23657 717.83206 313.43528 712.94882 c
302.58198 705.98268 302.58198 705.98268 283.20718 692.23691 c
262.33909 675.69222 242.37354 659.17928 224.39792 639.46176 c
220.72904 634.64258 217.05959 629.82283 213.38929 625.00195 c
204.71357 609.85701 199.48791 597.16913 196.96961 579.65981 c
196.96961 571.91613 196.96961 564.17216 196.96961 556.42819 c
199.76854 535.52976 205.45880 517.89742 215.96995 499.39257 c
218.33461 496.03521 220.69843 492.64441 223.09228 489.25417 c
235.22060 476.62951 246.07502 467.92120 263.77030 465.02901 c
270.05046 465.02901 276.36520 465.02901 282.67852 465.02901 c
298.87994 467.45461 313.34060 474.66964 327.21137 483.19058 c
331.90724 487.04655 333.68060 487.94939 344.03698 496.15852 c
360.42520 510.96217 374.29455 526.47987 381.41660 547.78309 c
384.18520 559.04202 384.74476 569.89531 383.12787 581.37080 c
378.86627 596.82699 371.02989 607.70948 356.10180 613.18318 c
340.80123 616.26359 325.15852 613.52646 312.78161 603.44986 c
305.07024 600.09194 297.97824 588.98976 294.21609 581.86772 c
291.88261 574.37235 290.79496 568.43235 292.44387 560.75216 c
297.04535 550.55140 302.82973 550.55140 313.34060 550.55140 c
324.00765 554.43883 329.57546 559.28948 329.57546 571.01386 c
326.62120 578.56989 318.65924 576.11367 314.52321 571.07679 c
314.52321 566.78542 314.33698 563.76794 319.87162 565.69521 c
321.08372 567.43795 321.83206 569.92535 319.12639 570.08098 c
318.78340 567.93430 318.81458 567.31351 316.66932 567.43795 c
314.36787 570.01946 323.57254 578.60220 327.83357 569.36665 c
327.83357 561.68362 322.51691 557.39254 316.45134 554.00258 c
309.33014 551.45282 304.41543 551.48400 298.00970 555.96274 c
289.86180 565.22976 294.12198 576.79824 299.16057 586.59449 c
300.87099 587.37260 302.05276 589.89090 302.86205 591.53839 c
304.44718 592.56567 306.00227 594.43257 306.93430 596.07921 c
322.45342 608.92299 339.30879 616.94731 359.33641 609.66964 c
360.08306 608.86176 360.08306 608.86176 362.78759 607.92803 c
364.25055 606.68447 365.30872 605.56479 367.11043 604.91225 c
369.10233 602.42287 369.10233 602.42287 371.68328 600.24756 c
380.39046 587.15376 382.25735 578.10529 382.25735 562.80416 c
378.68145 535.24998 361.98028 515.65776 342.07710 497.46557 c
336.47783 493.45370 330.91285 489.22413 325.53213 484.90072 c
313.56000 478.02841 313.56000 478.02841 303.07861 472.80331 c
297.60520 471.09317 292.13263 469.35128 286.65836 467.60939 c
279.56863 466.55348 272.57187 466.76976 265.38633 466.76976 c
252.69874 468.66699 244.55083 474.04800 234.19417 481.04419 c
204.65036 510.58913 191.96192 555.02844 202.16324 595.73650 c
205.61471 605.22293 205.61471 605.22293 209.06787 612.99751 c
215.93962 624.81543 223.86954 635.23304 232.88910 645.52649 c
237.98863 650.09792 240.22800 652.86652 259.22891 670.12611 c
293.84220 697.83562 333.92891 732.82139 380.82643 732.82139 c
386.89058 732.16828 392.20866 730.98567 398.08630 729.36935 c
402.59565 727.06876 407.10472 724.73556 411.61465 722.40293 c
421.53392 714.62948 421.53392 714.62948 426.29216 710.30551 c
436.77298 698.67496 444.67285 686.73260 452.22860 673.04891 c
455.68148 665.42967 459.13323 657.81071 462.61644 650.16000 c
464.91732 643.25650 467.21820 636.35386 469.52050 629.41720 c
471.82167 619.49764 474.12312 609.57723 476.42428 599.62564 c
477.29480 591.85077 478.16589 584.07506 479.03528 576.30189 c
479.03528 547.41033 473.93603 518.76709 450.92296 498.73975 c
442.40230 488.25950 429.99335 479.70822 419.48107 471.28054 c
411.98797 467.29899 406.29713 460.55112 398.89446 456.32098 c
385.21134 444.84661 370.09757 435.17395 356.19562 424.00885 c
327.27317 406.06554 301.43055 385.22948 266.78608 379.07206 c
261.43710 379.07206 256.08898 379.07206 250.70910 379.07206 c
242.56063 380.68866 235.81247 382.64797 228.25531 385.97528 c
217.49443 392.84872 217.49443 392.84872 212.14517 396.82942 c
205.24195 404.01156 198.80391 411.01087 192.64620 418.97112 c
163.75550 462.13682 149.23361 514.84819 145.99814 566.25676 c
146.27792 572.19477 146.55912 578.13591 146.86923 584.07506 c
148.73584 592.87691 150.47603 600.77650 153.77386 609.11036 c
160.73915 621.76677 161.54702 622.51313 162.48104 624.34743 c
166.92803 629.07449 171.40649 633.83357 175.88466 638.59266 c
191.46586 651.15524 206.85742 664.49707 223.96394 674.97789 c
225.67408 676.40854 227.38365 677.83861 229.12611 679.27011 c
270.73587 708.47093 310.26217 743.33339 359.11928 759.59745 c
367.76409 761.33962 367.76409 761.33962 376.84573 762.64526 c
385.98775 762.21014 385.98775 762.21014 393.76318 761.33962 c
410.30731 756.76791 422.00050 748.15342 434.16057 736.49169 c
445.23099 722.99395 454.43650 708.75128 462.61644 693.32712 c
466.06904 685.27134 469.52050 677.21754 472.97197 669.16233 c
474.12312 665.98923 475.27370 662.81783 476.42428 659.64529 c
487.80567 621.20835 496.70079 584.51074 491.53833 544.23723 c
490.38605 540.22620 489.23688 536.18372 488.08545 532.14009 c
483.35896 521.47389 478.00942 513.01531 470.36013 504.36935 c
460.93663 495.47480 460.93663 495.47480 456.08542 491.40085 c
424.45786 468.04620 421.34712 466.27257 381.47981 437.16472 c
342.72879 410.48249 302.92384 374.96750 253.38217 373.22561 c
@c
B

@rax %Note: Object
150.32126 491.99187 156.38542 516.62211 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
156.19748 491.99187 m
154.24044 499.61140 152.28000 507.22951 150.32069 514.84819 c
150.32069 515.44091 150.32069 516.03080 150.35187 516.62268 c
152.34293 508.87843 154.36460 501.13417 156.38513 493.36072 c
156.32334 492.92561 156.26211 492.45902 156.19748 491.99187 c
@c
F

@rax %Note: Object
145.15880 525.70290 147.98863 549.86683 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
147.98835 525.70318 m
146.83776 533.72665 145.15852 541.75039 145.15852 549.86627 c
146.09083 541.81247 147.02513 533.75726 147.98835 525.70318 c
@c
F

@rax %Note: Object
144.01587 556.36639 144.72340 583.57786 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
144.10148 556.36639 m
144.03855 565.54016 143.75991 574.46561 144.72283 583.57757 c
144.53631 574.52854 144.31861 565.44746 144.10148 556.36639 c
@c
F

@rax %Note: Object
144.94110 585.72369 146.90013 596.07978 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
144.94082 585.72397 m
145.59392 589.17572 146.24646 592.62746 146.90013 596.07921 c
145.56246 587.43411 145.56246 587.43411 144.94082 585.72397 c
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel10Dict 10.0 0
%%EOF

%%EndDocument
 @endspecial 306937 97575 a
 currentpoint grestore moveto
 306937 97575 a 246603 104906
a Fd(Figure)869 b Fi(1:)1192 b(Em)-72 b(blem)869 b(of)g(the)g(Univ)-72
b(ersit)g(y)868 b(of)h(Regensburg)g(\(rotated)h(b)-72
b(y)868 b(30)321928 103907 y Fc(\261)323131 104906 y
Fi(\).)1230 b(Em)-72 b(blem)869 b(of)g(the)246603 108227
y(Univ)-72 b(ersit)g(y)832 b(of)g(Regensburg)g(\(rotated)h(b)-72
b(y)831 b(30)291034 107228 y Fc(\261)292238 108227 y
Fi(\).)243836 115805 y(Y)-216 b(our)668 b(text)h(with)e(scien)-72
b(ti\257c)667 b(results)g(or)h(what)f(ev)-72 b(er...)1064
b(Y)-216 b(our)669 b(text)f(with)f(scien)-72 b(ti\257c)668
b(results)f(or)h(what)f(ev)-72 b(er...)243836 119126
y(Y)-216 b(our)668 b(text)h(with)e(scien)-72 b(ti\257c)667
b(results)g(or)h(what)f(ev)-72 b(er...)1064 b(Y)-216
b(our)669 b(text)f(with)f(scien)-72 b(ti\257c)668 b(results)f(or)h
(what)f(ev)-72 b(er...)243836 122446 y(Y)-216 b(our)668
b(text)h(with)e(scien)-72 b(ti\257c)667 b(results)g(or)h(what)f(ev)-72
b(er...)1064 b(Y)-216 b(our)669 b(text)f(with)f(scien)-72
b(ti\257c)668 b(results)f(or)h(what)f(ev)-72 b(er...)243836
125767 y(Y)-216 b(our)668 b(text)h(with)e(scien)-72 b(ti\257c)667
b(results)g(or)h(what)f(ev)-72 b(er...)1064 b(Y)-216
b(our)669 b(text)f(with)f(scien)-72 b(ti\257c)668 b(results)f(or)h
(what)f(ev)-72 b(er...)243836 129088 y(Y)-216 b(our)832
b(text)h(with)d(scien)-72 b(ti\257c)832 b(results)f(or)h(what)f(ev)-72
b(er...)243836 138219 y Fb(References)243836 144267 y
Fi([AA01])553 b(A.)832 b(Author1)h(and)e(B.)g(Author2.)1110
b(My)832 b(new)f(pap)72 b(er.)1109 b Fa(Journal)p Fi(,)831
b(2001.)13741 167090 y @beginspecial @setspecial
 tx@Dict begin STP newpath 5.69054 SLW 0. 0. 0.80 setrgbcolor  0.1
true 28.5114 neg 28.5114 neg 845.67274 45.78918 .5 Frame  gsave 3.0
-45 PtoC Shadow 0.25 setgray gsave fill grestore stroke grestore gsave
1. 1. 1. setrgbcolor gsave fill grestore stroke grestore gsave gsave
1. 1. 1. setrgbcolor currentrgbcolor grestore gsave 0.80 0.80 1. setrgbcolor
currentrgbcolor grestore 300 1.0 0. tx@GradientDict begin GradientFill
end grestore gsave 5.69054 SLW 0. 0. 0.80 setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
40422 w(Abstract)3591 178840 y(This)677 b(is)f(y)-72
b(our)678 b(abstract)h(of)f(this)e(p)72 b(oster)678 b(or)g(just)g(put)g
(y)-72 b(our)678 b(abstract)g(of)g(y)-72 b(our)678 b(pap)72
b(er)678 b(here...)1067 b(This)676 b(is)h(y)-72 b(our)678
b(abstract)3591 182161 y(of)707 b(this)e(p)72 b(oster)706
b(or)g(just)g(put)g(y)-72 b(our)706 b(abstract)h(of)f(y)-72
b(our)706 b(pap)72 b(er)706 b(here...)1077 b(This)704
b(is)h(y)-72 b(our)706 b(abstract)h(of)f(this)f(p)72
b(oster)706 b(or)g(just)3591 185482 y(put)721 b(y)-72
b(our)721 b(abstract)g(of)g(y)-72 b(our)721 b(pap)72
b(er)721 b(here...)1082 b(This)719 b(is)g(y)-72 b(our)721
b(abstract)h(of)f(this)f(p)72 b(oster)721 b(or)f(just)h(put)g(y)-72
b(our)721 b(abstract)g(of)3591 188802 y(y)-72 b(our)865
b(pap)72 b(er)864 b(here...)1216 b(This)863 b(is)g(y)-72
b(our)864 b(abstract)h(of)g(this)e(p)72 b(oster)864 b(or)h(just)f(put)g
(y)-72 b(our)865 b(abstract)f(of)h(y)-72 b(our)864 b(pap)72
b(er)865 b(here...)3591 192123 y(This)677 b(is)f(y)-72
b(our)678 b(abstract)h(of)f(this)e(p)72 b(oster)678 b(or)g(just)g(put)g
(y)-72 b(our)678 b(abstract)g(of)g(y)-72 b(our)678 b(pap)72
b(er)678 b(here...)1067 b(This)676 b(is)h(y)-72 b(our)678
b(abstract)3591 195444 y(of)832 b(this)f(p)72 b(oster)832
b(or)g(just)g(put)g(y)-72 b(our)832 b(abstract)g(of)g(y)-72
b(our)832 b(pap)72 b(er)832 b(here...)13741 209857 y
@beginspecial @setspecial
 tx@Dict begin STP newpath 5.69054 SLW 0. 0. 0.80 setrgbcolor  0.1
true 28.5114 neg 28.5114 neg 845.67274 45.78918 .5 Frame  gsave 3.0
-45 PtoC Shadow 0.25 setgray gsave fill grestore stroke grestore gsave
1. 1. 1. setrgbcolor gsave fill grestore stroke grestore gsave gsave
1. 1. 1. setrgbcolor currentrgbcolor grestore gsave 0.80 0.80 1. setrgbcolor
currentrgbcolor grestore 300 1.0 0. tx@GradientDict begin GradientFill
end grestore gsave 5.69054 SLW 0. 0. 0.80 setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 38334 w(In)-72
b(tro)72 b(duction)3591 221607 y(Y)-216 b(our)875 b(text)f(with)f
(scien)-72 b(ti\257c)874 b(results)f(or)h(what)g(ev)-72
b(er...)1245 b(Y)-216 b(our)874 b(text)h(with)e(scien)-72
b(ti\257c)873 b(results)g(or)h(what)g(ev)-72 b(er...)1245
b(Y)-216 b(our)3591 224927 y(text)921 b(with)f(scien)-72
b(ti\257c)920 b(results)g(or)h(what)f(ev)-72 b(er...)1385
b(Y)-216 b(our)922 b(text)f(with)f(scien)-72 b(ti\257c)920
b(results)g(or)g(what)h(ev)-72 b(er...)1385 b(Y)-216
b(our)921 b(text)3591 228248 y(with)895 b(scien)-72 b(ti\257c)895
b(results)g(or)g(what)g(ev)-72 b(er...)1310 b(Y)-216
b(our)896 b(text)g(with)e(scien)-72 b(ti\257c)895 b(results)g(or)h
(what)f(ev)-72 b(er...)1309 b(Y)-216 b(our)897 b(text)e(with)3591
231569 y(scien)-72 b(ti\257c)612 b(results)f(or)h(what)f(ev)-72
b(er...)1045 b(Y)-216 b(our)613 b(text)f(with)f(scien)-72
b(ti\257c)611 b(results)h(or)g(what)f(ev)-72 b(er...)1045
b(Y)-216 b(our)613 b(text)f(with)f(scien)-72 b(ti\257c)3591
234890 y(results)832 b(or)f(what)h(ev)-72 b(er...)3591
238211 y(Y)-216 b(our)875 b(text)f(with)f(scien)-72 b(ti\257c)874
b(results)f(or)h(what)g(ev)-72 b(er...)1245 b(Y)-216
b(our)874 b(text)h(with)e(scien)-72 b(ti\257c)873 b(results)g(or)h
(what)g(ev)-72 b(er...)1245 b(Y)-216 b(our)3591 241532
y(text)921 b(with)f(scien)-72 b(ti\257c)920 b(results)g(or)h(what)f(ev)
-72 b(er...)1385 b(Y)-216 b(our)922 b(text)f(with)f(scien)-72
b(ti\257c)920 b(results)g(or)g(what)h(ev)-72 b(er...)1385
b(Y)-216 b(our)921 b(text)3591 244853 y(with)895 b(scien)-72
b(ti\257c)895 b(results)g(or)g(what)g(ev)-72 b(er...)1310
b(Y)-216 b(our)896 b(text)g(with)e(scien)-72 b(ti\257c)895
b(results)g(or)h(what)f(ev)-72 b(er...)1309 b(Y)-216
b(our)897 b(text)e(with)3591 248174 y(scien)-72 b(ti\257c)832
b(results)f(or)h(what)f(ev)-72 b(er...)p 118992 248727
630 86706 v 169965 165083 a Fh(N)168996 165910 y Fg(X)169249
172005 y Fh(i)p Ff(=1)173434 168526 y Fe(x)765 b Fi(=)178611
166663 y(\()p Fe(N)901 b Fi(+)611 b(1\))p Fe(N)p 178611
167893 11315 111 v 183637 170415 a Fi(2)231810 168526
y(\(2\))124032 175538 y(Y)-216 b(our)828 b(text)g(with)f(scien)-72
b(ti\257c)827 b(results)g(or)g(what)h(ev)-72 b(er...)1117
b(equation)827 b(2...)1117 b(Y)-216 b(our)828 b(text)g(with)f(scien)-72
b(ti\257c)827 b(results)g(or)g(what)124032 178859 y(ev)-72
b(er...)1110 b(Y)-216 b(our)808 b(text)g(with)f(scien)-72
b(ti\257c)807 b(results)f(or)i(what)f(ev)-72 b(er...)1110
b(Y)-216 b(our)808 b(text)g(with)f(scien)-72 b(ti\257c)807
b(results)f(or)i(what)f(ev)-72 b(er...)124032 182180
y(Y)-216 b(our)874 b(text)h(with)e(scien)-72 b(ti\257c)873
b(results)h(or)f(what)h(ev)-72 b(er...)1245 b(Y)-216
b(our)875 b(text)f(with)f(scien)-72 b(ti\257c)873 b(results)h(or)g
(what)f(ev)-72 b(er...)1245 b(Y)-216 b(our)124032 185501
y(text)921 b(with)f(scien)-72 b(ti\257c)920 b(results)g(or)g(what)h(ev)
-72 b(er...)1385 b(Y)-216 b(our)921 b(text)g(with)f(scien)-72
b(ti\257c)920 b(results)g(or)h(what)f(ev)-72 b(er...)1385
b(Y)-216 b(our)922 b(text)124032 188822 y(with)831 b(scien)-72
b(ti\257c)831 b(results)g(or)h(what)f(ev)-72 b(er...)1119
b(Y)-216 b(our)833 b(text)f(with)f(scien)-72 b(ti\257c)831
b(results)g(or)h(what)f(ev)-72 b(er...)134182 201206
y @beginspecial @setspecial
 tx@Dict begin STP newpath 5.69054 SLW 0. 0. 0.80 setrgbcolor  0.1
true 28.5114 neg 28.5114 neg 845.67274 45.50922 .5 Frame  gsave 3.0
-45 PtoC Shadow 0.25 setgray gsave fill grestore stroke grestore gsave
1. 1. 1. setrgbcolor gsave fill grestore stroke grestore gsave gsave
1. 1. 1. setrgbcolor currentrgbcolor grestore gsave 0.80 0.80 1. setrgbcolor
currentrgbcolor grestore 300 1.0 0. tx@GradientDict begin GradientFill
end grestore gsave 5.69054 SLW 0. 0. 0.80 setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 41239 w(Section)124032
211644 y([AA01])750 b(Y)-216 b(our)751 b(text)f(with)g(scien)-72
b(ti\257c)749 b(results)h(or)g(what)g(ev)-72 b(er...)1092
b(Y)-216 b(our)750 b(text)h(with)f(scien)-72 b(ti\257c)749
b(results)h(or)g(what)g(ev)-72 b(er...)124032 214965
y(Y)-216 b(our)874 b(text)h(with)e(scien)-72 b(ti\257c)873
b(results)h(or)f(what)h(ev)-72 b(er...)1245 b(Y)-216
b(our)875 b(text)f(with)f(scien)-72 b(ti\257c)873 b(results)h(or)g
(what)f(ev)-72 b(er...)1245 b(Y)-216 b(our)124032 218286
y(text)921 b(with)f(scien)-72 b(ti\257c)920 b(results)g(or)g(what)h(ev)
-72 b(er...)1385 b(Y)-216 b(our)921 b(text)g(with)f(scien)-72
b(ti\257c)920 b(results)g(or)h(what)f(ev)-72 b(er...)1385
b(Y)-216 b(our)922 b(text)124032 221607 y(with)894 b(scien)-72
b(ti\257c)895 b(results)g(or)h(what)f(ev)-72 b(er...)1309
b(Y)-216 b(our)896 b(text)g(with)f(scien)-72 b(ti\257c)895
b(results)g(or)g(what)g(ev)-72 b(er...)1310 b(Y)-216
b(our)896 b(text)g(with)124032 224927 y(scien)-72 b(ti\257c)831
b(results)g(or)h(what)g(ev)-72 b(er...)1118 b(Y)-216
b(our)833 b(text)f(with)f(scien)-72 b(ti\257c)831 b(results)g(or)h
(what)g(ev)-72 b(er...)124032 228248 y(Y)-216 b(our)874
b(text)h(with)e(scien)-72 b(ti\257c)873 b(results)h(or)f(what)h(ev)-72
b(er...)1245 b(Y)-216 b(our)875 b(text)f(with)f(scien)-72
b(ti\257c)873 b(results)h(or)g(what)f(ev)-72 b(er...)1245
b(Y)-216 b(our)124032 231569 y(text)921 b(with)f(scien)-72
b(ti\257c)920 b(results)g(or)g(what)h(ev)-72 b(er...)1385
b(Y)-216 b(our)921 b(text)g(with)f(scien)-72 b(ti\257c)920
b(results)g(or)h(what)f(ev)-72 b(er...)1385 b(Y)-216
b(our)922 b(text)124032 234890 y(with)894 b(scien)-72
b(ti\257c)895 b(results)g(or)h(what)f(ev)-72 b(er...)1309
b(Y)-216 b(our)896 b(text)g(with)f(scien)-72 b(ti\257c)895
b(results)g(or)g(what)g(ev)-72 b(er...)1310 b(Y)-216
b(our)896 b(text)g(with)124032 238211 y(scien)-72 b(ti\257c)611
b(results)g(or)h(what)g(ev)-72 b(er...)1045 b(Y)-216
b(our)612 b(text)h(with)e(scien)-72 b(ti\257c)611 b(results)g(or)h
(what)f(ev)-72 b(er...)1046 b(Y)-216 b(our)612 b(text)h(with)e(scien)
-72 b(ti\257c)124032 241532 y(results)831 b(or)h(what)f(ev)-72
b(er...)124032 244853 y(Y)-216 b(our)874 b(text)h(with)e(scien)-72
b(ti\257c)873 b(results)h(or)f(what)h(ev)-72 b(er...)1245
b(Y)-216 b(our)875 b(text)f(with)f(scien)-72 b(ti\257c)873
b(results)h(or)g(what)f(ev)-72 b(er...)1245 b(Y)-216
b(our)124032 248174 y(text)921 b(with)f(scien)-72 b(ti\257c)920
b(results)g(or)g(what)h(ev)-72 b(er...)1385 b(Y)-216
b(our)921 b(text)g(with)f(scien)-72 b(ti\257c)920 b(results)g(or)h
(what)f(ev)-72 b(er...)1385 b(Y)-216 b(our)922 b(text)p
239433 248727 630 86706 v 244472 163934 a(with)895 b(scien)-72
b(ti\257c)895 b(results)g(or)g(what)g(ev)-72 b(er...)1310
b(Y)-216 b(our)896 b(text)g(with)e(scien)-72 b(ti\257c)895
b(results)g(or)h(what)f(ev)-72 b(er...)1309 b(Y)-216
b(our)896 b(text)g(with)244472 167255 y(scien)-72 b(ti\257c)611
b(results)h(or)g(what)f(ev)-72 b(er...)1045 b(Y)-216
b(our)613 b(text)f(with)f(scien)-72 b(ti\257c)611 b(results)h(or)f
(what)h(ev)-72 b(er...)1045 b(Y)-216 b(our)613 b(text)f(with)f(scien)
-72 b(ti\257c)244472 170576 y(results)831 b(or)h(what)g(ev)-72
b(er...)303411 200202 y
 gsave currentpoint currentpoint translate 60 neg rotate neg exch neg
exch translate
 303411 200202 a @beginspecial
141 @llx 371 @lly 496 @urx 766 @ury 1498 @rwi @setspecial
%%BeginDocument: gklogo.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 141 371 496 766 
%%LanguageLevel: 1
%%Creator: CorelDRAW 10
%%Title: gklogo.eps
%%CreationDate: Thu Nov 07 13:44:31 2002
%%DocumentProcessColors: Magenta Yellow 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 10 Version 10.410
%Color profile:  Generisches Offset-Auszugsprofil
/CorelIsEPS true def
%%BeginResource: procset wCorel10Dict 10.0 0
/wCorel10Dict 300 dict def wCorel10Dict begin
% Copyright (c)1992-2000 Corel Corporation
% All rights reserved.     v10.0 r0.2
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel10Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
141.90803 371.48372 495.68655 765.02239 @E
 0 O 0 @g
0.00 1.00 1.00 0.00 k
/$fm 0 def
248.18910 371.48315 m
232.01802 374.84192 221.38271 380.40860 208.44454 390.70176 c
168.60728 430.53987 152.40557 486.51761 143.41720 540.78633 c
141.58205 560.71984 140.55619 580.93512 145.56246 600.46526 c
148.48526 608.51934 151.50331 615.73408 156.01181 623.04236 c
170.65956 640.64466 189.00765 657.03288 208.84932 668.51008 c
230.77417 684.18198 253.84847 699.63846 274.90252 716.40142 c
301.52381 734.93546 329.07742 754.65383 360.86060 763.05033 c
380.88850 766.56359 397.55764 766.09672 415.75068 755.74091 c
422.06202 751.35600 427.87786 746.91014 433.63304 741.84009 c
437.67496 737.05039 441.71717 732.26098 445.76050 727.47156 c
449.18107 722.18551 452.63282 716.89861 456.08542 711.61200 c
482.55109 661.82343 500.40170 603.73049 494.58643 546.81846 c
491.16501 533.04180 487.40117 521.56602 479.00608 509.99783 c
474.68296 505.39550 470.36013 500.79260 466.03644 496.15852 c
434.13024 469.87994 399.01861 447.70677 366.14778 422.70406 c
345.62013 408.61672 325.28409 394.55887 303.20362 382.99039 c
291.35395 378.04564 279.50542 373.69134 266.78608 371.73203 c
260.59748 371.67080 254.41002 371.57669 248.18910 371.48315 c
@c
F

@rax %Note: Object
145.99814 373.22561 493.03587 762.64526 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 1.00 1.00 0.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
253.38217 373.22561 m
242.09376 375.15317 232.73235 378.04564 222.68806 383.36372 c
219.39052 385.78961 216.09496 388.24583 212.76822 390.70176 c
201.19918 400.96460 193.05071 412.00526 184.43679 425.00551 c
176.66107 439.62094 169.82050 454.14482 163.72545 469.50605 c
162.07597 474.32778 157.38066 483.65830 157.69134 488.53984 c
159.96189 481.79169 162.26334 475.04296 164.56450 468.29339 c
179.42995 434.05512 197.40501 395.52293 234.38154 380.81367 c
240.44570 379.07206 240.44570 379.07206 249.09109 377.36164 c
255.52913 377.36164 261.96548 377.36164 268.43471 377.36164 c
291.97644 381.18699 312.19143 392.81811 332.37383 405.03969 c
354.95235 421.52173 379.48876 436.10683 400.48072 454.61197 c
406.85556 458.15528 412.45285 463.44302 418.17600 467.98243 c
421.53392 470.00494 421.53392 470.00494 431.92176 478.21465 c
443.92649 488.57074 460.71893 501.72605 467.84098 516.37351 c
476.98299 527.35124 479.06674 545.72995 480.74769 559.44567 c
480.74769 565.60309 480.74769 571.76079 480.74769 577.91820 c
479.59569 587.27792 478.44652 596.63934 477.29480 606.00047 c
474.99392 615.20570 472.69162 624.41093 470.39131 633.64762 c
466.93899 644.43883 466.93899 644.43883 463.48639 653.52019 c
454.71742 673.76523 445.41780 691.48998 431.29899 708.56391 c
425.82557 713.75726 420.41537 718.73405 414.41272 723.33553 c
409.53005 725.91676 404.64822 728.49798 399.73408 731.11181 c
378.49380 736.73915 360.92211 734.65569 340.21077 726.78784 c
331.16117 722.40293 322.23657 717.83206 313.43528 712.94882 c
302.58198 705.98268 302.58198 705.98268 283.20718 692.23691 c
262.33909 675.69222 242.37354 659.17928 224.39792 639.46176 c
220.72904 634.64258 217.05959 629.82283 213.38929 625.00195 c
204.71357 609.85701 199.48791 597.16913 196.96961 579.65981 c
196.96961 571.91613 196.96961 564.17216 196.96961 556.42819 c
199.76854 535.52976 205.45880 517.89742 215.96995 499.39257 c
218.33461 496.03521 220.69843 492.64441 223.09228 489.25417 c
235.22060 476.62951 246.07502 467.92120 263.77030 465.02901 c
270.05046 465.02901 276.36520 465.02901 282.67852 465.02901 c
298.87994 467.45461 313.34060 474.66964 327.21137 483.19058 c
331.90724 487.04655 333.68060 487.94939 344.03698 496.15852 c
360.42520 510.96217 374.29455 526.47987 381.41660 547.78309 c
384.18520 559.04202 384.74476 569.89531 383.12787 581.37080 c
378.86627 596.82699 371.02989 607.70948 356.10180 613.18318 c
340.80123 616.26359 325.15852 613.52646 312.78161 603.44986 c
305.07024 600.09194 297.97824 588.98976 294.21609 581.86772 c
291.88261 574.37235 290.79496 568.43235 292.44387 560.75216 c
297.04535 550.55140 302.82973 550.55140 313.34060 550.55140 c
324.00765 554.43883 329.57546 559.28948 329.57546 571.01386 c
326.62120 578.56989 318.65924 576.11367 314.52321 571.07679 c
314.52321 566.78542 314.33698 563.76794 319.87162 565.69521 c
321.08372 567.43795 321.83206 569.92535 319.12639 570.08098 c
318.78340 567.93430 318.81458 567.31351 316.66932 567.43795 c
314.36787 570.01946 323.57254 578.60220 327.83357 569.36665 c
327.83357 561.68362 322.51691 557.39254 316.45134 554.00258 c
309.33014 551.45282 304.41543 551.48400 298.00970 555.96274 c
289.86180 565.22976 294.12198 576.79824 299.16057 586.59449 c
300.87099 587.37260 302.05276 589.89090 302.86205 591.53839 c
304.44718 592.56567 306.00227 594.43257 306.93430 596.07921 c
322.45342 608.92299 339.30879 616.94731 359.33641 609.66964 c
360.08306 608.86176 360.08306 608.86176 362.78759 607.92803 c
364.25055 606.68447 365.30872 605.56479 367.11043 604.91225 c
369.10233 602.42287 369.10233 602.42287 371.68328 600.24756 c
380.39046 587.15376 382.25735 578.10529 382.25735 562.80416 c
378.68145 535.24998 361.98028 515.65776 342.07710 497.46557 c
336.47783 493.45370 330.91285 489.22413 325.53213 484.90072 c
313.56000 478.02841 313.56000 478.02841 303.07861 472.80331 c
297.60520 471.09317 292.13263 469.35128 286.65836 467.60939 c
279.56863 466.55348 272.57187 466.76976 265.38633 466.76976 c
252.69874 468.66699 244.55083 474.04800 234.19417 481.04419 c
204.65036 510.58913 191.96192 555.02844 202.16324 595.73650 c
205.61471 605.22293 205.61471 605.22293 209.06787 612.99751 c
215.93962 624.81543 223.86954 635.23304 232.88910 645.52649 c
237.98863 650.09792 240.22800 652.86652 259.22891 670.12611 c
293.84220 697.83562 333.92891 732.82139 380.82643 732.82139 c
386.89058 732.16828 392.20866 730.98567 398.08630 729.36935 c
402.59565 727.06876 407.10472 724.73556 411.61465 722.40293 c
421.53392 714.62948 421.53392 714.62948 426.29216 710.30551 c
436.77298 698.67496 444.67285 686.73260 452.22860 673.04891 c
455.68148 665.42967 459.13323 657.81071 462.61644 650.16000 c
464.91732 643.25650 467.21820 636.35386 469.52050 629.41720 c
471.82167 619.49764 474.12312 609.57723 476.42428 599.62564 c
477.29480 591.85077 478.16589 584.07506 479.03528 576.30189 c
479.03528 547.41033 473.93603 518.76709 450.92296 498.73975 c
442.40230 488.25950 429.99335 479.70822 419.48107 471.28054 c
411.98797 467.29899 406.29713 460.55112 398.89446 456.32098 c
385.21134 444.84661 370.09757 435.17395 356.19562 424.00885 c
327.27317 406.06554 301.43055 385.22948 266.78608 379.07206 c
261.43710 379.07206 256.08898 379.07206 250.70910 379.07206 c
242.56063 380.68866 235.81247 382.64797 228.25531 385.97528 c
217.49443 392.84872 217.49443 392.84872 212.14517 396.82942 c
205.24195 404.01156 198.80391 411.01087 192.64620 418.97112 c
163.75550 462.13682 149.23361 514.84819 145.99814 566.25676 c
146.27792 572.19477 146.55912 578.13591 146.86923 584.07506 c
148.73584 592.87691 150.47603 600.77650 153.77386 609.11036 c
160.73915 621.76677 161.54702 622.51313 162.48104 624.34743 c
166.92803 629.07449 171.40649 633.83357 175.88466 638.59266 c
191.46586 651.15524 206.85742 664.49707 223.96394 674.97789 c
225.67408 676.40854 227.38365 677.83861 229.12611 679.27011 c
270.73587 708.47093 310.26217 743.33339 359.11928 759.59745 c
367.76409 761.33962 367.76409 761.33962 376.84573 762.64526 c
385.98775 762.21014 385.98775 762.21014 393.76318 761.33962 c
410.30731 756.76791 422.00050 748.15342 434.16057 736.49169 c
445.23099 722.99395 454.43650 708.75128 462.61644 693.32712 c
466.06904 685.27134 469.52050 677.21754 472.97197 669.16233 c
474.12312 665.98923 475.27370 662.81783 476.42428 659.64529 c
487.80567 621.20835 496.70079 584.51074 491.53833 544.23723 c
490.38605 540.22620 489.23688 536.18372 488.08545 532.14009 c
483.35896 521.47389 478.00942 513.01531 470.36013 504.36935 c
460.93663 495.47480 460.93663 495.47480 456.08542 491.40085 c
424.45786 468.04620 421.34712 466.27257 381.47981 437.16472 c
342.72879 410.48249 302.92384 374.96750 253.38217 373.22561 c
@c
B

@rax %Note: Object
150.32126 491.99187 156.38542 516.62211 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
156.19748 491.99187 m
154.24044 499.61140 152.28000 507.22951 150.32069 514.84819 c
150.32069 515.44091 150.32069 516.03080 150.35187 516.62268 c
152.34293 508.87843 154.36460 501.13417 156.38513 493.36072 c
156.32334 492.92561 156.26211 492.45902 156.19748 491.99187 c
@c
F

@rax %Note: Object
145.15880 525.70290 147.98863 549.86683 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
147.98835 525.70318 m
146.83776 533.72665 145.15852 541.75039 145.15852 549.86627 c
146.09083 541.81247 147.02513 533.75726 147.98835 525.70318 c
@c
F

@rax %Note: Object
144.01587 556.36639 144.72340 583.57786 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
144.10148 556.36639 m
144.03855 565.54016 143.75991 574.46561 144.72283 583.57757 c
144.53631 574.52854 144.31861 565.44746 144.10148 556.36639 c
@c
F

@rax %Note: Object
144.94110 585.72369 146.90013 596.07978 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
144.94082 585.72397 m
145.59392 589.17572 146.24646 592.62746 146.90013 596.07921 c
145.56246 587.43411 145.56246 587.43411 144.94082 585.72397 c
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel10Dict 10.0 0
%%EOF

%%EndDocument
 @endspecial 320059 200202 a
 currentpoint grestore moveto
 320059 200202 a 247240 207544
a Fd(Figure)686 b Fi(2:)1046 b(Em)-72 b(blem)686 b(of)h(the)f(Univ)-72
b(ersit)g(y)686 b(of)g(Regensburg)h(\(rotated)g(b)-72
b(y)686 b(60)320776 206544 y Fc(\261)321979 207544 y
Fi(\).)1071 b(Em)-72 b(blem)686 b(of)h(the)f(Univ)-72
b(ersit)g(y)247240 210865 y(of)832 b(Regensburg)g(\(rotated)h(b)-72
b(y)831 b(60)279562 209865 y Fc(\261)280766 210865 y
Fi(\).)244472 219558 y(Y)-216 b(our)875 b(text)f(with)f(scien)-72
b(ti\257c)874 b(results)f(or)h(what)f(ev)-72 b(er...)1245
b(Y)-216 b(our)875 b(text)f(with)g(scien)-72 b(ti\257c)873
b(results)g(or)h(what)g(ev)-72 b(er...)1245 b(Y)-216
b(our)244472 222879 y(text)921 b(with)f(scien)-72 b(ti\257c)920
b(results)g(or)h(what)f(ev)-72 b(er...)1385 b(Y)-216
b(our)922 b(text)f(with)e(scien)-72 b(ti\257c)921 b(results)f(or)g
(what)h(ev)-72 b(er...)1385 b(Y)-216 b(our)921 b(text)244472
226200 y(with)895 b(scien)-72 b(ti\257c)895 b(results)g(or)g(what)g(ev)
-72 b(er...)1310 b(Y)-216 b(our)896 b(text)g(with)e(scien)-72
b(ti\257c)895 b(results)g(or)h(what)f(ev)-72 b(er...)1309
b(Y)-216 b(our)896 b(text)g(with)244472 229521 y(scien)-72
b(ti\257c)611 b(results)h(or)g(what)f(ev)-72 b(er...)1045
b(Y)-216 b(our)613 b(text)f(with)f(scien)-72 b(ti\257c)611
b(results)h(or)f(what)h(ev)-72 b(er...)1045 b(Y)-216
b(our)613 b(text)f(with)f(scien)-72 b(ti\257c)244472
232842 y(results)831 b(or)h(what)g(ev)-72 b(er...)244472
241990 y Fb(References)244472 248041 y Fi([AA01])554
b(A.)831 b(Author1)i(and)e(B.)h(Author2.)1110 b(My)831
b(new)g(pap)72 b(er.)1110 b Fa(Journal)p Fi(,)830 b(2001.)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
